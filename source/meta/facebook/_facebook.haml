-##
-# Facebook related meta tags
-# Contains meta tags from the Open Graph Protocol also.
-#
-# Yielded content will take precedence over front matter then stub locale then
-# specific data files then default tag in locale.
-#
-# @author   Ian Warner <ian.warner@drykiss.com>
-# @category meta
-#
-# @see      https://developers.facebook.com/docs/sharing/best-practices#images
-# @see      http://ogp.me/
-##

-# Current page data
- cp = current_page.data

-# Front matter meta
- if cp
    - m = cp

    -# Stub meta
- else
    - m = "meta.#{ current_page.data.stub }"

-# URL
- url = t( :url ) + current_page.url

-##
-# Dynamic content
-##

-# Og Title
%meta{ content: content_for?( :metaTitle ) ? yield_content( :metaTitle ) : cp ? string( m.title ) : string( :"#{ m }.title" ), property: "og:title" }

-# Og Description
%meta{ content: content_for?( :metaDescription ) ? yield_content( :metaDescription ) : cp ? string( m.description ) : string( :"#{ m }.description" ), name: "description", property: "og:description" }

-# Image
-# Should be a full URL including domain
- image = content_for?( :metaImage ) ? yield_content( :metaImage ) : cp && cp.image ? string( m.image ) : t( :"#{ m }.image", :default => string( :"meta.image" ) )
%meta{ property: "og:image", content: t( :url ) + image }

-# Site name
%meta{ content: t( :"meta.siteName" ), property: "og:site_name" }

-# Type
- type = content_for?( :metaType ) ? yield_content( :metaType ) : cp && cp.type ? string( m.type ) : t( :"#{ m }.type", :default => string( :"meta.type" ) )
%meta{ property: "og:type", content: type }

-# URL
-# Should be the same as the Canonical URL
%meta{ content: url, property: "og:url" }

-# App ID
- appID = data.facebook.app.id

- if appID

    -# Test id
    - if development?
        - appID = data.facebook.app.testID

        -# App ID
    - else
        - appID = ( appID == "locale" ) ? t( :"facebook.app.id" ) : appID

    %meta{ content: appID, property: "fb:app_id" }

-# Locale
%meta{ content: t( :"facebook.locale" ), property: "og:locale" }
