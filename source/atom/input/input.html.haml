---

description : "Input"
title       : "Input"

see :
    - - "Bootstrap Forms"
      - "http://getbootstrap.com/css/#forms"
    - - "Bootstrap Forms"
      - "http://getbootstrap.com/css/#forms"
    - - "Formspree"
      - "http://formspree.io/"
    - - "HTML5 Forms"
      - "http://diveintohtml5.info/forms.html"
    - - "Touchspin"
      - "http://www.virtuosoft.eu/code/bootstrap-touchspin/"
    - - "Select Boxes Chosen"
      - "http://harvesthq.github.io/chosen/"

todo :
    - - "Link to the clear button page"
    - - "Complete this page with all the relevant types available"
    - - "Add the password pattern to the input"
    - - "Password should be accompanied by the password validation element"
    - - "On Submit all inputs should validate - contain them in one form element"
    - - "Sort out Form groups and input groups - one should be nested in the other haml_tag?"
    - - "Check box has a label around the input - maybe create new helper for this"
    - - "If using .form-horizontal then need to address the column sizes that add up to 12 on label and input"
    - - "Input groups can have a size attribute i.e. input-group-lg add this as a size attribute"
    - - "Input Groups can have an associated input-group-btn with dropdowns etc"
    - - "Make the pre and appended items interactive."
    - - "There are two many container divs being produced use content capture."
    - - "Make it so it produces something with zero configuration"
    - - "Clear button should be an option"
    - - "The Help block needs more documentation with validation and error messages - it expects array"
    - - "Split out the attributes of an input, they follow a common pattern in most areas, display local or false"

---

-# Text type
:ruby
    code = %{codeBlender "input", "atom",
      { help:  {},
        icon:  { prepend: "fa-credit-card" },
        input: { name: "text", placeholder: "Enter Text" },
        label: { title: "Text Input" } }}

-# Code
= codeBlender "code", "organism",
  { code: code, heading: { small: "With input group appended", text: "Text Type" } }

-# Password type
:ruby
    code = %{codeBlender "input", "atom",
      { help:  { text: "Enter 8 characters [a-zA-Z0-9]" },
        icon:  { prepend: "fa-credit-card" },
        input: { name: "password", placeholder: "Enter password", type: "password" },
        label: { title: "Password" } } }

-# Code
= codeBlender "code", "organism",
  { code: code, heading: { small: "Also contains some help text", text: "Password Type" } }

-# Email type
:ruby
    code = %{codeBlender "input", "atom",
      { help:  {},
        icon:  { prepend: "fa-envelope" },
        input: { name: "email", placeholder: "Enter email", type: "email" },
        label: { title: "Email" } }}

-# Code
= codeBlender "code", "organism",
  { code: code, heading: { small: "Also contains a group icon", text: "Email Type" } }

-# Column
:ruby
    code = %{codeBlender "input", "atom",
      { column: "col-lg-6",
        icon:   { prepend: "fa-envelope" },
        input:  { name: "email", placeholder: "Enter email", type: "email" },
        label:  { title: "Email" } }}

-# Code
= codeBlender "code", "organism",
  { code: code, heading: { small: "Specify the width of an Input", text: "Columns" } }

-# Button addon
:ruby
    code = %{codeBlender "input", "atom",
      { button: { append: { text: "HERE", ng: { click: "here" } } },
        input:  { name: "email", placeholder: "Enter email", type: "email" },
        label:  { title: "Email" } }}

-# Code
= codeBlender "code", "organism",
  { code: code, heading: { small: "Specify the width of an Input", text: "Button addon" } }
