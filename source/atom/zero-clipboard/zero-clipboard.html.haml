---

meta:
    author      : "DryKISS"
    description : "ZeroClipboard library provides an easy way to copy text to the clipboard using an invisible Adobe Flash movie and a JavaScript interface."
    image       : "Image"
    subject     : "DryKISS"
    title       : "ZeroClipboard library provides an easy way to copy text to the clipboard using an invisible Adobe Flash movie and a JavaScript interface."
    type        : "website"

heading :
    title : "Zero Clipboard"

see :
    - - "Zero Clipboard"
      - "https://github.com/zeroclipboard/zeroclipboard"
    - - "NG Clip"
      - "https://github.com/asafdav/ng-clip"

todo :
    - - "Move the required ngClipProvider.setPath to the controller if possible"
    - - "Create the DOM interaction as an angular directive"
    - - "Move text into locale"
    - - "Make this more angular - use ng-class to change tabs for instance and scope to access the contents"

---

-# Bootstrap row
.row

    -# Bootstrap column
    .col-md-6

        -# Heading
        = codeBlender "heading", "molecule", { tag: "h3", text: "Installation" }

        -# Markdown
        :markdown

            To facilitate a copy to clipboard pattern, we will utilise NGClip, which in
            turn uses the ZeroClipboard library.

            - Add "ng-clip" : "" to bower.json
            - $ bower install

            Add the path to the SWF file into your angular app config

            - ngClipProvider.setPath '/assets/swf/ZeroClipboard.swf'

            Include the correct JavaScript files in the JavaScript sprockets

            - //= require zeroclipboard/dist/ZeroClipboard
            - //= require ng-clip/dest/ng-clip.min

            Set ngClipboard as a dependency

            - angular.module 'app', [ 'ngClipboard' ]

            Add clip-copy directive to the desired element, example:

            - clip-copy="NGModel"
            - clip-copy="getTextToCopy()"
            - clip-click="doSomething()"

    -# Bootstrap column
    .col-md-6

        -# Heading
        = codeBlender "heading", "molecule", { tag: "h3", text: "Example" }

        -# Input
        = codeBlender "input", "atom", { input: { name: "text", ng: { model: "copy1" } }, label: { title: "Enter Text" } }

        -# Default
        :ruby
            code = %{codeBlender "zero-clipboard", "atom", { model: "copy1" }}

        -# Code
        = codeBlender "code", "organism", { code: code, heading: { text: "Default" } }