-##
-# Button / link
-# While button classes can be used on <a> and <button> elements,
-# only <button> elements are supported within our nav and navbar components.
-#
-# If the <a> elements are used to act as buttons triggering in-page
-# functionality, rather than navigating to another document or section within
-# the current page they should also be given an appropriate role="button".
-#
-# @usage
-# -# Button
-# = codeBlender "button", "atom", { icon: { prepend: "fa-credit-card" }, text: "Default" }
-#
-# @author   Ian Warner <ian.warner@drykiss.com>
-# @category atom
-##

-# Dropdown
- extraClass  = locals[ :dropdown ] ? "dropdown-toggle" : "btn btn-default"

-# Active
- extraClass += locals[ :active ] ? " active" : ""

-# Block level
- extraClass += locals[ :block ] ? " btn-block" : ""

-# Colour
- extraClass += locals[ :context ] ? " btn-#{ locals[ :context ] }" : ""

-# Extra class
- extraClass += locals[ :extraClass ] ? " #{ locals[ :extraClass ] }" : ""

-# Size - lg, sm, xs
- extraClass += locals[ :size ] ? " btn-#{ locals[ :size ] }" : ""

-# Dropdown aria
- if locals[ :dropdown ]
    - locals[ :aria ] = { haspopup: "true", expanded: "false" }

-# Tag
- tag = locals[ :href ] ? "a" : "button"

-# Capture content
- captureHTML = capture_html do

    -# Prepend icon
    - if locals[ :icon ] and locals[ :icon ][ :prepend ]
        = codeBlender "icon", "atom", { icon: locals[ :icon ][ :prepend ] }

    -# Close content
    - if locals[ :text ] == "close"
        %span{ aria: { hidden: "true" } } &times;

        -# Text content
    - elsif locals[ :text ]
        = string text

    -# Append icon
    - if locals[ :icon ] && locals[ :icon ][ :append ]
        = codeBlender "icon", "atom", { icon: locals[ :icon ][ :append ] }

    -# Image
    - if locals[ :image ]
        = codeBlender "image", "atom", locals[ :image ]

    -# Dropdown caret
    - if locals[ :dropdown ]
        %span{ class: "dropdown__icon" }

-# Attribute
- attribute = { aria:     locals[ :aria ]     ? locals[ :aria ]       : false,
                class:    extraClass,
                disabled: locals[ :disabled ] ? "disabled='disabled'" : false,
                clip:     locals[ :clip ]     ? clip                  : false,
                data:     locals[ :data ]     ? data                  : false,
                hidden:   locals[ :hidden ]   ? "hidden"              : false,
                href:     locals[ :href ]     ? locals[ :href ]       : false,
                id:       locals[ :id ]       ? id                    : false,
                itemprop: locals[ :itemprop ] ? itemprop              : false,
                ng:       locals[ :ng ]       ? ng                    : false,
                role:     locals[ :href ]     ? "button"              : false,
                tabindex: locals[ :tabindex ] ? locals[ :tabindex ]   : false,
                title:    locals[ :title ]    ? string( title )       : false,
                type:     locals[ :type ]     ? locals[ :type ]       : "button",
                ui:       locals[ :ui ]       ? ui                    : false }

-# HAML tag
- haml_tag tag, attribute do
    = captureHTML