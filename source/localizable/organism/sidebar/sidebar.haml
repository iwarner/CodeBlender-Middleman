---

meta :
    author      : "DryKISS"
    description : "Sidebar - CodeBlender"
    image       : "Image"
    subject     : "DryKISS"
    title       : "Sidebar - CodeBlender"
    type        : "website"

heading :
    small : "Stripe"
    title : "Scaffolding Sidebar partial"


todo :
    - - "Sort out what gets pushed into this section"
    - - "Sort out the affix issues here - { :data => { :spy => 'affix', :'offset-top' => '10', :'offset-bottom' => '250' } }"

---

-# ID
- id = 0

-# Nav - sidebar
%nav.sidebar

    .nav.list-group

        %a.list-group-item{ href: "javascript:;" }
            HERE

-# Main one
.sidebar
    %ul#mainMenu

-# Example
.sidebar

    %ul
        %li.drop
            %a{"data-toggle" => "drop", :href => "#"}
                First Menu
                %i.icon-arrow
            %ul.drop-menu
                %li
                    %a{:href => "#"} Home
                %li
                    %a{:href => "#"} About Us
        %li.drop
            %a{"data-toggle" => "drop", :href => "#"}
                Second Menu
                %i.icon-arrow
            %ul.drop-menu
                %li
                    %a{:href => "#"} Home
                %li
                    %a{:href => "#"} About Us

%hr

:markdown

    http://codepen.io/pedronauck/pen/fcaDw

    ### Notes

    - Do not need leaf, as if menu is null thats enough
    - For full JavaScript I would usually use a template library like handlebars
        - But mainly I would use AngularJS these days
        - Or create statically in Middleman, prototype depending
    - Guess the in Mobile | Full site should be split links - so would explode on pipe
    - I could refactor the creation of the menu more but there is enough difference to not bother for a prototype
    - Would usually create cross browser hasClass but for prototype contains is fine
    - Expand the menu - would probably work some toggle in here instead of if else but satisficed

    *   Use the loaded JSON to create a tree menu taking into consideration this JSON structure description:
        *   Id          : id of the element
        *   Description : Text displayed in the menu
        *   Link        : Not applicable
        *   CssClass    : CSS class of the menu element
        *   Menu        : If available contains the submenu nodes

    *   Include the following attributes in each menu element: id, cssClass.
        Also the description has to be displayed as the menu text.
    *   When you click on a menu it should display any nested sub navigation,
        displaying the content on the page.

    Requirements

    *   Use Object Oriented JavaScript for the implementation; do not use a
        framework for this task, it should be plain Javascript.
    *   Make the code the most adaptable possible.
    *   Use a Git repository to save the test and share it‚Äù