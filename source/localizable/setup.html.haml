---

author      : "DryKISS"
description : "Setup"
small       : Setup
title       : Setup

see :
    - - "Setup"
      - "wdwd"

todo :
    - - "Check out https://github.com/mledoze/countries - include into dropdowns etc"
      - "Countries"
      - "2014-05-19"
      - { "context" : "info" }

---

/ This wiki will collate information regarding the projects, process and best
/ practices for the development team. This will be our **knowledge base** and
/ collective learning tool.

/ Each section should have reference URLs to further examine the best practices
/ currently being used by other sophisticated teams.

/ It is the responsibility of all the developers to update and maintain this wiki.

/ ## Repository

/ See the [[development set-up|DevelopmentSetup]] section to create the relevant
/ folders before proceeding.

/ ```bash
/ $ git clone git@github.com:AlphaFounders/alphafounders.com.wiki.git
/ ```

/ Note the .wiki at the end of the URL, this can be applied to any repository at
/ GitHub to manage the wiki externally.

/ ## Editing

/ There are several options for this. Either:

/ 1. Use Sublime directly and simply push the changes to the repository and
/ examine the results at GitHub.

/ 2. Install [Gollum][] to provide a local staging server to examine edits before
/ pushing the changes to the live wiki. Please follow the installation instructions
/ on the Gollum page. You can still use Sublime to edit, simply commit the changes
/ into Git to see the updates in Gollum.

/ ## Markdown

/ The wiki should be written using [Github Flavoured Markdown][], please spend
/ some time reading through the changes.

/ Also check out [Daring Fireball][] to get familiar with Markdown.

/ For advanced help on setting up your system for Markdown editing please check
/ out this [article][]

/ ## Deploying

/ Updating the wiki content is simply done via [GIT][]. Commit and push the
/ edits to GitHub. Please make sure you **git pull** prior to a push.

/ [Gollum]:https://github.com/gollum/gollum
/ [Github Flavoured Markdown]:https://help.github.com/articles/github-flavored-markdown
/ [Daring Fireball]:http://daringfireball.net/projects/markdown/syntax
/ [GIT]:http://git-scm.com/
/ [article]:http://www.macstories.net/roundups/sublime-text-2-and-markdown-tips-tricks-and-links/

/ :markdown

/     * Xcode - from App Store
/         * xcode-select --install to install the command line tools

/     * Homebrew - http://brew.sh/
/         * ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
/         * brew doctor
/         * brew update && brew upgrade
/         * brew tap homebrew/dupes
/         * brew tap homebrew/versions
/         * brew install wget imagemagick openssl libyaml
/         * brew link openssl --force - this basically overides the apple version so could cause issues

/     * GIT - http://git-scm.com/
/         * brew install git
/         * Create a .gitconfig file -
/             [user]
/                 name  = Ian Warner
/                 email = ian.warner@drykiss.com
/             [core]
/                 autocrlf = input
/     * ZSH - http://www.zsh.org/
/         * brew install zsh
/         * chsh -s /usr/local/bin/zsh $USER
/     * Oh My ZSH - https://github.com/robbyrussell/oh-my-zsh
/         * curl -L http://install.ohmyz.sh | sh
/         * git clone https://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme.git ~/.oh-my-zsh/themes/powerline
/         * cd ~/.oh-my-zsh/themes/powerline
/         * ln -f powerline.zsh-theme ~/.oh-my-zsh/themes/powerline.zsh-theme
/         * wget "https://github.com/Lokaltog/powerline-fonts/raw/master/InconsolataDz/Inconsolata-dz%20for%20Powerline.otf"
/     * Gems
/         * gem update --no-ri --no-rdo --system
/         * gem update --no-ri --no-rdo
/         * gem install --no-ri --no-rdo bundler
/         * gem clean

/     Place links to the relevant docs files for the setup of codeblender and mac
/     machine etc

/     Place code hints on how to run through the setup

/ The following article outlines a process for syncing up the development systems
/ to create a harmonious environment for pair programming, creating system scripts
/ and code reviewing on each others machine.

/ Developers should use a MAC if possible, otherwise set up [Ubuntu][] on a good PC.

/ Instructions are given for both Mac and Ubuntu.

/ ##Â Image

/ In the future we should create an OSX and Ubuntu development image that can be
/ deployed to new developers. This image will contain all the tools, scripts and
/ essential day to day processes we use.

/ ## Directory Set-up

/ It's a good idea to create all projects inside your Dropbox folder. This way
/ the code and assets are automatically backed up.

/     / ~/Dropbox/www/AlphaFouders/*Projects*

/ Then symlink this folder to a local

/     /var/www

/ This way scripts we write can be universally utilised

/ ### Script for doing this in Ubuntu

/ ```bash
/ chmod a+rx ~/Dropbox
/ mkdir -p ~/Dropbox/www/AlphaFounders
/ cd ~/Dropbox/www/AlphaFounders
/ git clone git@github.com:AlphaFounders/alphafounders.com.wiki.git
/ git clone git@github.com:AlphaFounders/api.askhanuman.com.git
/ git clone git@github.com:AlphaFounders/askhanuman.com.git
/ git clone git@github.com:AlphaFounders/library.alphafounders.com.git
/ git clone git@github.com:AlphaFounders/email.askhanuman.com.git
/ git clone git@github.com:AlphaFounders/widget.askhanuman.com.git
/ git clone git@github.com:AlphaFounders/sublime.alphafounders.com.git
/ git clone git@github.com:AlphaFounders/admin.alphafounders.com.git
/ git clone git@github.com:AlphaFounders/hansaled.com.git
/ sudo mkdir -p /var/www
/ sudo ln -s ~/Dropbox/www/AlphaFounders /var/www/AlphaFounders
/ sudo ln -s ~/Dropbox/www/AlphaFounders/library.alphafounders.com /var/www/Library
/ ```

/ ## Code Editor / IDE - Sublime Text

/ Use of [Sublime Text][] is required. We have created a repository containing
/ the necessary set of packages to streamline the coding we do.

/ It is not a full-featured IDE but the speed and ease of use make it far better.

/ * Simply [Download Sublime][] and install the correct version for your machine.

/ For Ubuntu

/ ```bash
/ sudo sh -c 'echo "deb http://ppa.launchpad.net/webupd8team/sublime-text-2/ubuntu raring main\
/ deb-src http://ppa.launchpad.net/webupd8team/sublime-text-2/ubuntu raring main" >> /etc/apt/sources.list'
/ sudo apt-get update
/ sudo apt-get install sublime-text
/ ```

/ Lastly read the following page for more instructions on [[Sublime Setup|Sublime]]

/ ## Homebrew

/ For OSX using [Homebrew][] is the simplest way to get most of the required
/ software and packages.

/ ## ZSH

/ [ZSH][] is a modern configurable shell prompt. Including the best features from
/ bash, ksh and other shells.

/ For Ubuntu

/ ```bash
/ sudo apt-get install zsh
/ ```

/ For Mac

/ ```bash
/ brew install zsh
/ ```

/ ## Oh-My-ZSH

/ [Oh-My-Zsh][] is a framework for managing and extending upon the ZSH shell. It
/ comes fully loaded with great themes, plugins and cool tools. It will speed up
/ using the terminal 10-fold.

/ For [Ubuntu Installation][], follow the instructions.

/ For Mac follow the instructions on the Github page.

/ To extend upon the framework edit the example file or add your own.

/ ```bash
/ sudo nano ~/.oh-my-zsh/custom/example.zsh
/ ```
/ One helpful alias to add:

/ ```bash
/ alias alpha=~/Dropbox/www/AlphaFounders/
/ ```

/ Themes can easily be changed in the .zshrc file

/ ```bash
/ sudo nano ~/.zshrc
/ ```

/ Check out [Oh-My-Zsh Themes][] to customise it even more.

/     # Set name of the theme to load - Look in ~/.oh-my-zsh/themes/
/     ZSH_THEME="af-magic"

/ ### (Optional) Install fonts for some of OhMyZsh theme for Ubuntu

/ use git clone command to download pre-fixed fonts
/ from [Powerline-Fonts][]

/ ```bash
/ cd ~
/ git clone https://github.com/Lokaltog/powerline-fonts.git ~/.fonts
/ fc-cache -vf ~/.fonts
/ ```

/ Lastly, in the preference of your terminal program,
/ change default font to use on of the fonts from the directory ~/.fonts

/ ## RBEnv

/ [RBEnv][] is a virtual environment for using several Ruby versions at the same time

/ For Ubuntu, run the script below in terminal

/ ```bash
/ echo 'Install development tools:'
/ sudo apt-get update
/ sudo apt-get -y install build-essential git-core \
/   make libc6-dev libssl-dev libssl-dev \
/   libreadline6-dev zlib1g-dev libyaml-dev

/ echo 'Install rbenv:'
/ git clone git://github.com/sstephenson/rbenv.git ~/.rbenv

/ echo 'Add rbenv to the path (for BASH):'
/ echo 'if [ -d "$HOME/.rbenv" ] ; then' >> .bashrc
/ echo '  export PATH="$HOME/.rbenv/bin:$PATH"' >> .bashrc
/ echo '  export PATH="$HOME/.rbenv/shims:$PATH"' >> .bashrc
/ echo '  eval "$(rbenv init -)"' >> .bashrc
/ echo 'fi' >> .bashrc
/ source ~/.bashrc

/ echo 'Add rbenv to the path (for ZSH)'
/ echo 'export RBENV_ROOT="$HOME/.rbenv"' >> .zshrc
/ echo 'if [ -d "$RBENV_ROOT" ]; then' >> .zshrc
/ echo '    export PATH="$RBENV_ROOT/bin:$PATH"' >> .zshrc
/ echo '    export PATH="$RBENV_ROOT/shims:$PATH"' >> .zshrc
/ echo '    eval "$(rbenv init -)"' >> .zshrc
/ echo 'fi' >> .zshrc

/ echo 'Install ruby-build:'
/ mkdir -p ~/.rbenv/plugins
/ git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
/ PREFIX=~/.rbenv ~/.rbenv/plugins/ruby-build/install.sh

/ echo 'Install rbenv-bundler:'
/ git clone -- git://github.com/carsomyr/rbenv-bundler.git ~/.rbenv/plugins/bundler

/ echo 'Rehash:'
/ rbenv rehash

/ echo 'Install Ruby 1.9.3-p448:'
/ rbenv install 1.9.3-p448
/ rbenv global 1.9.3-p448

/ echo 'Rehash:'
/ rbenv rehash

/ echo 'Install Bundler'
/ gem install bundler
/ ```

/ ## Github

/ [Github][] is a git hosting, which is a configuration management system.
/ We can upload and share code files among our team with versioning for each upload,
/ and automatically conflict solving.

/ ### Github Account

/ Sign up for a Github account on [Github](http://github.com)

/ Create public key and private key for this account for login via SSH

/ ```bash
/ $ cd ~
/ $ ssh-keygen
/ Generating public/private rsa key pair.
/ Enter file in which to save the key (/home/pete/.ssh/id_rsa): [press Enter]
/ Enter passphrase (empty for no passphrase): [type your new password for this key]
/ Enter same passphrase again: [type the same password again]
/ (...snip..)
/ ```

/ Now your public key is located at ~/.ssh/id_rsa.pub and your private key is at ~/.ssh/id_rsa

/ Open the public key file (with any text editor, e.g. Sublime Text, gedit)
/ and copy all the content in the file.

/ Open http://github.com and login into your account, go to "Account Settings",
/ go to "SSH Keys" menu, and click "Add SSH Key", then paste the content of the key in the big text area box.
/ (Name box can be anything, does not matter) Click "Add Key" and confirm the key with your Github account's password.

/ Test the key is working by run this command, if it says "Hi, yourname! .... " you are done.

/ ```bash
/ ssh -T git@github.com
/ ```

/ ### Install git command on developer machine

/ ```bash
/ sudo apt-get install git git-core
/ ```

/ ## Install Apache on Developer Machine

/ **For Ubuntu**

/ ```bash
/ sudo apt-get install apache2 libapache2-mod-php5
/ sudo a2enmod headers rewrite
/ sudo ln -s ~/Dropbox/www/AlphaFounders /var/www/AlphaFounders
/ sudo ln -s ~/Dropbox/www/AlphaFounders/library.alphafounders.com
/ sudo sh -c 'echo "Include \"/var/www/AlphaFounders/api.askhanuman.com/config/vhost.conf\"" > /etc/apache2/sites-available/alphafounders'
/ cd /etc/apache2/sites-enabled
/ sudo ln -s ../sites-available/alphafounders alphafounders
/ sudo sh -c 'echo "127.0.0.1  dev-api.askhanuman.com" >> /etc/hosts'
/ sudo service apache2 restart
/ ```

/ To see if the setup is working, open a browser to http://dev-api.askhanuman.com/v1/echo/1

/ ## Initialize PHP Repository

/ Current PHP Repositories are:

/ * api.askhanuman.com

/ In a PHP repository, there are some PHP commands that need to run in a terminal.

/ To install a software needed (run once for the whole system),

/ ```bash
/ sudo apt-get install php5-cli php5-curl php5-intl curl
/ ```

/ [Composer][] is a package management tool for PHP.

/ Only for a **new PHP project** (not for git-cloned repository),
/ the composer can be installed by run this command

/ ```bash
/ cd the_new_php_project
/ curl -s https://getcomposer.org/installer | php
/ ```

/ The configuration for Composer is inside the file named "composer.json" in the directory.

/ To install or update the composer packages, run either in the directory

/ ```bash
/ php composer.phar install
/ ```

/ or

/ ```bash
/ php composer.phar update
/ ```

/ ## Initialize Middleman or Ruby Repository

/ Current Middleman or Ruby Repositories are:

/ * askhanuman.com ( git clone )
/ * hansaled.com

/ In each directory, there is a file called "Gemfile" containing list of ruby gem
/ packages to be needed in each repository.

/ To install/update all the gem packages, run this command in the directory

/ ```bash
/ bundle install
/ ```

/ ## For Wiki System

/ Currently using Wiki repository:

/ * alphafounders.com/wiki ( git clone git clone git@github.com:AlphaFounders/alphafounders.com.wiki.git )

/ Wiki files (extension: .md) are written in [Markdown language] and will be displayed on Github.

/ There are 2 ways to render the Markdown file as an HTML page

/ ### Using Gollum

/ Gollum is a ruby server to convert and serve Markdown files as a web server.

/ To install Gollum, run

/ ```bash
/ gem install libxslt-dev libxml2-dev github-markdown
/ ```

/ To run github-markdown to render a file

/ ```bash
/ gollum
/ ```

/ Gollum will open the port 4567 on the local machine.
/ See the pages at http://localhost:4567

/ ### Using Sublime Plugin

/ If setup Sublime using steps from [[Sublime Setup|Sublime]],
/ your Sublime will have a plugin named [Markdown Preview][] installed.

/ To use this plugin, open any markdown document (.md) with Sublime.
/ Then press Ctrl+Shift+P (or Command+Shift+P on Mac),
/ and type something(e.x. 'prev') to search for the menu
/ **"Markdown Preview: Preview in Browser"**.
/ Select the menu, it will open your default browser to the page generated from current markdown file.

/ ## Development / Staging / QA Server

/ Create the correct environments

/ * [Testing](http://staging.alphafounder.com)

/ * HOST :
/ * USER :
/ * PASS :

/ ## Tools

/ FrontEnd
/  - Middleman
/  - YAML
/  - HTML5
/  - HAML
/  - SCSS
/  - Coffeescript
/  - JQuery
/  - Bootstrap
/  - Backbone
/  - Underscore
/  - Jasmine
/  - Selenium
/  - JS OAuth2
/  - Social Widgets

/ API
/  - PHPSlim
/  - MongoDB
/  - PHP Unit
/  - REST
/  - JSON
/  - Behat
/  - Guzzle

/ Tools
/  - Mac
/  - Sublime Text
/  - Chrome
/  - Postman Rest
/  - Thor
/  - Ubuntu
/  - JSLint
/  - CSSLint
/  - HTML Validation
/  - Virtual Box
/  - Vagrant
/  - Git - GitHub - GitFlow
/  - Oh My ZSH

/ [Ubuntu]:http://Ubuntu.org/
/ [Sublime Text]:http://www.sublimetext.com
/ [Download Sublime]:http://www.sublimetext.com/2
/ [Homebrew]:http://mxcl.github.io/homebrew/
/ [ZSH]:http://www.zsh.org/
/ [Oh-My-Zsh]:https://github.com/robbyrussell/oh-my-zsh
/ [Ubuntu Installation]:https://gist.github.com/tsabat/1498393
/ [Oh-My-Zsh Themes]:https://github.com/robbyrussell/oh-my-zsh/wiki/themes
/ [Powerline-Fonts]:https://github.com/Lokaltog/powerline-fonts
/ [RBEnv]:https://github.com/sstephenson/rbenv
/ [Github]:http://github.com
/ [Composer]:http://getcomposer.org
/ [Markdown language]:http://daringfireball.net/projects/markdown/syntax
/ [Markdown Preview]:https://github.com/revolunet/sublimetext-markdown-preview