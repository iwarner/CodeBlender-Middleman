---

meta :
    author      : "DryKISS"
    description : "CodeBlender - Middleman hand crafted Bootstrap HAML partials"
    image       : "Image"
    subject     : "DryKISS"
    title       : "CodeBlender - Middleman hand crafted Bootstrap HAML partials"
    type        : "website"

heading :
    small : "iPhone click through viewer"
    title : "Prototype Creator"

todo :
    - - "Swipe needs to happen on certain regions only, and should work back and forward - use history push"
      - "Mobile"
      - "2014-02-12"
      - { "context" : "warning" }
    - - "Steps should be: Create Project, Upload Screens, Create Regions"
      - "Mobile"
      - "2014-02-12"
      - { "context" : "info" }
    - - "Project creation Form - Project Name - Type (Web or Mobile) perhaps"
      - "Mobile"
      - "2014-02-12"
      - { "context" : "info" }
    - - "Make sure screen names conform to a standard when uploaded - no spaces, strange chars etc or rename them"
      - "Mobile"
      - "2014-02-12"
      - { "context" : "danger" }
    - - "Details saved to local storage"
      - "Database"
      - "2014-02-12"
      - { "context" : "info" }
    - - "Allow for the boundaries to be chained to produce the full flow for the project"
      - "Mobile"
      - "2014-02-12"
      - { "context" : "danger" }
    - - "Add an input to declare the parent CSS"
      - "Mobile"
      - "2014-02-12"
      - { "context" : "info" }
    - - "Add an input on boundary select end to name the region"
      - "Mobile"
      - "2014-02-12"
      - { "context" : "info" }
    - - "Once all has been created then download assets including HTML, JS and CSS"
      - "Mobile"
      - "2014-02-12"
      - { "context" : "info" }
    - - "Select a phone when creating the project - use phone as the background for the project"
      - "Mobile"
      - "2014-02-19"
      - { "context" : "warning" }
    - - "Link together the names of the regions with arrows in a formatted way - show screens later - export to PDF
         Find out recursively what is connected to each other"
      - "Mobile"
      - "2014-02-28"
      - { "context" : "warning" }

---

- if build?
    :css
        body {
            padding-top : 0;
        }

        .mobilePrototype a {
            border : 0;
        }

-# Introduction
:markdown

    To create a static image prototype the following should be created.

    **Creation**

    * Screenshots, recommended .png format
    * data file (yaml), creates the screens and region co-ordinates array;
    * Small Javascript file to handle the clicks.

    Utilising JCrop to creates the region boxes, the co-ordinates can then be displayed
    in the co-ordinates box. Simply overide the show variable in the Javascript
    to target an individual screen.

    **Deployment**

    * Config.rb set mobile variable to true - this ignores folders from deployment
    * Make sure in mobile.js view that show is set to false
    * Build - thor project:buildCordova
    * double click platforms/ios/*.xcodeproj file

-# Form
%form{ novalidate: false }

/     -# Project Name
/     = partial "./atom/input",
/                :locals => { :input => { :name        => "project",
/                                         :placeholder => "Enter project name" },
/                             :label => { :title => "Project Name" } }

/     -# Submit
/     = partial "./atom/button/button",
/                locals: { context: "primary",
/                          text:    "Save" }

/ .row.prototype

/     .col-md-7.phoneSection

/         -# Heading
/         = partial "./molecule/heading/heading",
/                    :locals => { :text => "iPhone5 - 320x568",
/                                 :tag  => "h2" }

/         -# iPhone Container
/         %section.iphoneSection

/             %article.iphoneContainer.mobilePrototype.scrollBox

/                 -# Check that data exists
/                 - if data.prototype01

/                     -# Create Options container
/                     - options = [ ]

/                     -# Loop through the array
/                     - data.prototype01.each do | entry |

/                         -# Options
/                         - options << [ entry.extraClass ]

/                         -# Container
/                         %div{ :class  => entry.extraClass,
/                               :hidden => entry.hidden ? false : true }

/                             -# Check that regions exist
/                             - if entry.region

/                                 -# Loop Through the regions
/                                 - entry.region.each do | region |

/                                     -# Link To
/                                     = link_to( "",
/                                                "#",
/                                                :class => region.extraClass,
/                                                :style => region.coords ? "height:#{ region.coords[ 0 ] }px; width:#{ region.coords[ 1 ] }px; left:#{ region.coords[ 2 ] }px; top:#{ region.coords[ 3 ] }px;" : false,
/                                                :data  => { :goto => region.goto } )

/                             -# Image
/                             = partial "./atom/image/image",
/                                        :locals => { :alt        => "Image",
/                                                     :extraClass => "img-responsive",
/                                                     :src        => "prototype01/#{ entry.image }.png" }

/     .col-md-5.phoneToolsSection

/         -# Description
/         = partial "./molecule/heading/heading",
/                    :locals => { :text => "Description",
/                                 :tag  => "h2" }

/         :markdown

/             **Learn More**

/             Learn more is where the user is introduced to the application, a carousel
/             gives the user the opportunity to swipe between many screens that provides
/             information on what the app is about, how to use it and benefits.

/             * Carousel
/             * Hero Image
/             * Buttons

/         -# Heading
/         = partial "./molecule/heading/heading",
/                    :locals => { :text => "Screen Selection",
/                                 :tag  => "h2" }

/         -# Change the screen
/         - if options

/             -# Select
/             = partial "./form/select",
/                        :locals => { :array => options ,
/                                     :label => [ "Screen Selection", true ],
/                                     :name  => "screenSelection" }

/         -# Heading
/         = partial "molecule/heading/heading",
/                    :locals => { :text => "Co-Ordinates",
/                                 :tag  => "h2" }

/         -# Input
/         = partial "./form/textarea",
/                    :locals => { :name => "coords",
/                                 :rows => "2"}

/         -# Heading
/         = partial "molecule/heading/heading",
/                    :locals => { :text => "Actions",
/                                 :tag  => "h2" }

/         -# Button to toggle the display of the Borders
/         = partial "./atom/button/button",
/                    locals: { context:    "primary",
/                              text:       "Toggle Regions",
/                              extraClass: "toggleRegion" }

/         -# Button to toggle the display of the Borders
/         = partial "./atom/button/button",
/                    locals: { context:    "primary",
/                              text:       "Toggle JCrop",
/                              extraClass: "toggleJCrop" }