---

meta :
    author      : "DryKISS"
    description : "Table - CodeBlender"
    image       : "Image"
    subject     : "DryKISS"
    title       : "Table - CodeBlender"
    type        : "website"

heading :
    small : "http://getbootstrap.com/css/#tables"
    title : "Bootstrap Table Partial"

datasource :
    column :
        - property : "bookmark"
          label    : "Bookmark"
          sortable : true
        - property : "image"
          label    : "Image"
          sortable : false
        - property : "description"
          label    : "Description"
          sortable : true
        - property : "details"
          label    : "Details"
          sortable : true
    data :
        -
            - "Row 1 Column 1"
            - "Row 1 Column 2"
            - "Row 1 Column 3"
            - "Row 1 Column 4"
        -
            - "Row 2 Column 1"
            - "Row 2 Column 2"
            - "Row 2 Column 3"
            - "Row 2 Column 4"

see :
    - - "Bootstrap Tables"
      - "http://getbootstrap.com/css/#tables"

todo :
    - - "Document the flags for table data"
    - - "Allow the auto magic to be switched off"
    - - "Fix the context element"
    - - "Use the partial here not in-line"

locals :
    - - "array"
      - "array"
      - "required"
      - "Array of entries for the Table"
    - - "id"
      - "string"
      - "optional"
      - "ID attribute for the Table tag"
    - - "tableClass"
      - "string"
      - "optional"
      - "Table class elements such as table-striped, table-bordered, table-hover, table-condensed, table-responsive"

---

- id = 0

%p
    The table will detect a context { "context" : "info" } element and colour the
    row accordingly. Also any cell that contain http will be linked automatically.

-# Fixtures
= Fixture.table( 11, 1 )
-# season, division, team = nil, type = nil, unplayed = nil )

-# Football table
-# If there is a point deduction colour the number red or add a contextual badge
-# Add a tooltip or some text underneath the table
%table.table.table-bordered.table-hover.table-striped

    -# Head
    %thead
        %tr
            %th Team
            %th P
            %th W
            %th D
            %th L
            %th F
            %th A
            %th GD
            %th PTs

    -# Body
    %tbody

        - data = Table.table( 11, 1 )
        - count = data.count

        -# Loop through the fixtures per division
        - data.each_with_index do | row, index |

            -# Context
            - if index == count - 1
                - extraClass = "danger"

            - if index == 0
                - extraClass = "success"

            -# Row
            %tr{ class: extraClass }

                -# Team name
                %td= row[ 0 ]

                -# Played
                %td= row[ 1 ][ :p ]

                -# Won
                %td= row[ 1 ][ :w ]

                -# Draw
                %td= row[ 1 ][ :d ]

                -# Lost
                %td= row[ 1 ][ :l ]

                -# For
                %td= row[ 1 ][ :f ]

                -# Away
                %td= row[ 1 ][ :a ]

                -# Goal difference
                %td= row[ 1 ][ :gd ]

                -# Points
                %td= row[ 1 ][ :pts ]


-# Results matrix
-# Want the club nickname to be used
- results = Matrix.matrix( 11, 1 )
- teams   = results.keys.sort

-# Table
%table#results_table.table.table-bordered.table-hover.table-striped

    -# Away team
    %tr.away_teams

        %td

        - teams.each do | away_team |
            %td
                %div= away_team

    -# Team
    - teams.each do | team |

        - team_results = results[ team ]

        -# Home team
        %tr.home_team

            %td= team

            - teams.each do | home_team |

                - if team_results[ home_team ]
                    %td= "#{ team_results[ home_team ][ :f ]} - #{ team_results[ home_team ][ :a ]}"

                - elsif team == home_team
                    %td.same_team

                - else
                    %td.no_play

/ -# Default
/ :ruby
/     code = %{partial "./molecule/table/table", locals: { array: current_page.data.datasource }}

/ -# Code
/ = partial "./organism/code/code", locals: { id: id += 1, code: code, heading: { text: "Default" } }

/ -# Pretty
/ :ruby
/     code = %{partial "./molecule/table/table",
/                       locals: { array:      current_page.data.datasource,
/                                 tableClass: "table-striped table-bordered table-hover table-condensed" }}

/ -# Code
/ = partial "./organism/code/code", locals: { id: id += 1, code: code, heading: { text: "Pretty" } }

/ -# Responsive
/ :ruby
/     code = %{partial "./molecule/table/table",
/                       locals: { array:      current_page.data.datasource,
/                                 responsive: true,
/                                 tableClass: "table-striped table-bordered table-hover table-condensed" }}

/ -# Code
/ = partial "./organism/code/code", locals: { id: id += 1, code: code, heading: { text: "Responsive" } }