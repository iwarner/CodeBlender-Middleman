-##
-# Breadcrumb
-#
-# @usage
-# -# Breadcrumb
-# = partial "molecule/breadcrumb/breadcrumb",
-#            locals: { array: current_page.data.breadcrumbs }
-#
-# @category breadcrumb
-# @author   Ian Warner <ian.warner@drykiss.com>
-##

-# Check if array exists otherwise use URL
- unless locals[ :array ]

    -# Get the url elements
    - split = current_page.url.split "/"

    -# Count items
    - count = split.count

    -# Create breadcrumb array
    - array = []

    -# Last breadcrumb variables
    - lastBreadcrumb = ""

    -# Check if split exists
    - if not split.empty?

        -# Loop through these to create the breadcrumb array
        - split.each_with_index do | breadcrumb, index |

            -# Collect the last url partial
            - lastBreadcrumb += "/" + breadcrumb

            -# If breadcrumb is empty i.e. for Home
            - text = breadcrumb.empty? ? "Home" : breadcrumb.capitalize

            -# Sort out the first element
            - if index == 0

                -# Add the breadcrumbs Hash
                - array << { icon: "fa-home", link: { url: "/index.html" } }

                -# Sort out the last element
            - elsif count -1 == index

                -# If the last one is index.html remove the last array
                - if text != "index.html"
                    - array << { active: true, text: text.chomp( File.extname( text ) ) }
                - else
                    - array[ -1 ][ :url ]    = false
                    - array[ -1 ][ :active ] = true

                -# Sort out the middle elements
            - else

                -# Add the breadcrumb Hash
                - array << { text: text, link: { url: "#{ lastBreadcrumb.sub( "//", "/" ) }/index.html" } }

    - else

        -# Home page breadcrumb
        - array << { active: true, text: "Home" }

-# List
= partial "atom/list/list.ul", locals: { array: array, extraClass: "breadcrumb", type: "ol" }