-##
-# Navigation bar
-# Create a navigation array in the corresponding locale file, this will identify
-#
-# @usage
-#
-# @locals
-# brand      :
-#     active : false
-#     text   : true
-#     link   : "overview"
-# icon       : false
-# extraClass : "navbar-default navbar-fixed-top" # navbar-static-top navbar-inverse navbar-fixed-bottom
-# ng         :
-#     controller : "NavbarController"
-#     show       : "NavbarService"
-#     cloak      : ""
-# logo       :
-#     alt    : false
-#     width  : false
-#     height : false
-# type       : false
-# uLClass    : "navbar-left"
-# wrapper    : false
-#
-# @category molecule
-# @author   Ian Warner <ian.warner@drykiss.com>
-# @see      https://getbootstrap.com/examples/navbar/
-# @see      http://getbootstrap.com/components/#navbar
-##

-# Variables
- nav        = locals
- links      = t :navigation
- id         = nav.id ? nav.id : "navbar"
- extraClass = nav.extraClass ? extraClass : false
- angular    = nav.ng ? ng : false
- container  = nav.container ? nav.container : dataConfig.container

-# Navigation bar
%nav.navbar{ id: id, class: extraClass, role: "navigation", ng: angular }

    -# Bootstrap container - drawn from configuration container
    %div{ class: container }

        -# Header
        .navbar-header

            -# Create the collapsible menu - requires JS plug-in
            %button.navbar-toggle.collapsed{ type: "button",
                                             data: { toggle: "collapse",
                                                     target: nav.target ? "##{ target }" : "#navbar-collapse" } }
                %span.sr-only Toggle Navigation

                -# Loop through Spans
                - 3.times do
                    %span.icon-bar

            -# Brand
            = partial "./molecule/brand/navbar"

        -# Create the collapse area
        .navbar-collapse.collapse{ id: nav.target ? target : "navbar-collapse" }

            -# Loop through the left, centre and right sections
            - links.each do | entry |

                -# List initiation
                %ul.nav.navbar-nav{ class: "navbar-#{ entry[ 0 ] }" }

                    -# Loop through entries
                    - entry[ 1 ].each do | side |

                        -# Get correct URL path
                        -# - if ! relative_links
                        -#     - url = current_page.url.length > 1 ? current_page.url[ 0...-1 ] : current_page.url
                        -# - else
                        -#     - url = File.dirname( URI.parse( current_page.url ).path )

                        -# Sort out what item is active
                        -# - side[ :active ] = ( url == side[ :url ] ) ? true : false

                        -# Process Array
                        -# - array = []
                        -# - array << side

                        -# Dropdown menu
                        - if side[ :dropdown ]

                            -# Dropdown Partial
                            = partial "./molecule/dropdown/navbar",
                                       locals: { dropDownClass: side[ :dropdownClass ],
                                                 title:         side[ :dropdown ],
                                                 icon:          side[ :icon ] ? side[ :icon ] : false,
                                                 ng:            side[ :ng ]   ? side[ :ng ]   : false,
                                                 list:          { array: side[ :items ], dropdown: true } }

                            -# Shop Widget
                        - elsif side[ :shop ]

                            -# Simple Cart Widget
                            %li= partial "./e-commerce/widget"

                            -# Button
                        - elsif side[ :button ]

                            %div{ class: side[ :extraClass ] ? side[ :extraClass ] : false }

                                -# Button
                                = partial "./atom/button/button", locals: side[ :button ]

                            -# Just show a Partial useful for Mega Menus
                        - elsif side[ :partial ]

                            = partial "../_lib/#{ side[ :partial ] }"

                            -# Text Link
                        - else

                            -# List
                            = partial "./atom/list/list.ul",
                                       locals: { array:      [ side ],
                                                 navBar:     true,
                                                 extraClass: side[ :extraClass ] }

            -# Check if search is required
            - if dataGoogle.present? && dataGoogle.search

                -# Search Google
                = partial "./molecule/search/searchNavbar"
