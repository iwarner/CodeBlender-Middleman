---

meta :
    author      : "DryKISS"
    description : "Protoype - CodeBlender"
    image       : "Image"
    subject     : "DryKISS"
    title       : "Protoype - CodeBlender"
    type        : "website"

heading :
    small : "iPhone click through viewer"
    title : "Prototype Creator"

todo :
    - - "Swipe needs to happen on certain regions only, and should work back and forward - use history push"
    - - "Steps should be: Create Project, Upload Screens, Create Regions"
    - - "Project creation Form - Project Name - Type (Web or Mobile) perhaps"
    - - "Make sure screen names conform to a standard when uploaded - no spaces, strange chars etc or rename them"
    - - "Details saved to local storage"
    - - "Allow for the boundaries to be chained to produce the full flow for the project"
    - - "Add an input to declare the parent CSS"
    - - "Add an input on boundary select end to name the region"
    - - "Once all has been created then download assets including HTML, JS and CSS"
    - - "Select a phone when creating the project - use phone as the background for the project"
    - - "Link together the names of the regions with arrows in a formatted way - show screens later - export to PDF Find out recursively what is connected to each other"

---

- if build?
    :css
        body {
            padding-top : 0;
        }

        .mobilePrototype a {
            border : 0;
        }

-# Introduction
:markdown

    To create a static image prototype the following should be created.

    **Creation**

    * Screenshots, recommended .png format
    * data file (yaml), creates the screens and region co-ordinates array;
    * Small JavaScript file to handle the clicks.

    Utilising JCrop to creates the region boxes, the co-ordinates can then be displayed
    in the co-ordinates box. Simply override the show variable in the JavaScript
    to target an individual screen.

    **Deployment**

    * Config.rb set mobile variable to true - this ignores folders from deployment
    * Make sure in mobile.js view that show is set to false
    * Build - thor project:buildCordova
    * double click platforms/ios/*.xcodeproj file

-# Form
%form{ novalidate: false }

    -# Input - Project Name
    = partial "atom/input/input.haml",
               locals: { input: { name:        "project",
                                  placeholder: "Enter project name" },
                         label: { title: "Project Name" } }

    -# Button - Save
    = partial "atom/button/button.haml", locals: { context: "primary", text: "Save" }

.row.prototype

    .col-md-7.phoneSection

        -# Heading
        = partial "molecule/heading/heading.haml", locals: { text: "iPhone5 - 320x568", tag: "h2" }

        -# iPhone Container
        %section.iphoneSection

            %article.iphoneContainer.mobilePrototype.scrollBox

                -# -# Check that data exists
                -# - if data.prototype01

                -#     -# Create Options container
                -#     - options = [ ]

                -#     -# Loop through the array
                -#     - data.prototype01.each do | entry |

                -#         -# Options
                -#         - options << [ entry.extraClass ]

                -#         -# Container
                -#         %div{ class: entry.extraClass, hidden: entry.hidden ? false : true }

                -#             -# Check that regions exist
                -#             - if entry.region

                -#                 -# Loop Through the regions
                -#                 - entry.region.each do | region |

                -#                     -# Link To
                -#                     = link_to( "",
                -#                                "#",
                -#                                class: region.extraClass,
                -#                                style: region.coords ? "height:#{ region.coords[ 0 ] }px; width:#{ region.coords[ 1 ] }px; left:#{ region.coords[ 2 ] }px; top:#{ region.coords[ 3 ] }px;" : false,
                -#                                data:  { goto: region.goto } )

                -#             -# Image
                -#             = partial "atom/image/image.haml",
                -#                        locals: { alt:        "Image",
                -#                                  extraClass: "img-responsive",
                -#                                  src:        "prototype01/#{ entry.image }.png" }

    .col-md-5.phoneToolsSection

        -# Description
        = partial "molecule/heading/heading.haml", locals: { text: "Description", tag: "h2" }

        :markdown

            **Learn More**

            Learn more is where the user is introduced to the application, a carousel
            gives the user the opportunity to swipe between many screens that provides
            information on what the app is about, how to use it and benefits.

            * Carousel
            * Hero Image
            * Buttons

        -# Heading
        = partial "molecule/heading/heading.haml", locals: { text: "Screen Selection", tag: "h2" }

        -# Change the screen
        -# - if options

        -#     -# Select
        -#     = partial "atom/select/select.haml", locals: { array: options, label: { title: "Screen Selection" }, name: "screenSelection" }s

        -# Heading
        = partial "molecule/heading/heading.haml", locals: { text: "Co-Ordinates", tag: "h2" }

        -# Input
        = partial "atom/textarea/textarea.haml", locals: { name: "coords", rows: "2", label: { title: "Co-Ords" } }

        -# Heading
        = partial "molecule/heading/heading.haml", locals: { text: "Actions", tag: "h2" }

        -# Button - Toggle the display of the Borders
        = partial "atom/button/button.haml",
                   locals: { context:    "primary",
                             text:       "Toggle Regions",
                             extraClass: "toggleRegion" }

        -# Button - Toggle the display of the Borders
        = partial "atom/button/button.haml",
                   locals: { context:    "primary",
                             text:       "Toggle JCrop",
                             extraClass: "toggleJCrop" }