---

meta :
    author      : "DryKISS"
    description : "Timeline - CodeBlender"
    image       : "Image"
    subject     : "DryKISS"
    title       : "Timeline - CodeBlender"
    type        : "website"

angular :
    controller   : "TimelineCtrl"
    controllerAs : "timeline"

heading :
    title : "Timeline"

see :
    - - "Angular Timeline"
      - "https://github.com/rpocklin/angular-timeline"
    - - "Infinite Scroll"
      - "http://fdietz.github.io/recipes-with-angular-js//common-user-interface-patterns/paginating-using-infinite-results.html"

todo :
    - - "Add new interaction, need to see the wireframe for the add interaction form"
    - - "Interaction form, Does each interaction need a slightly different form"
    - - "Interaction form, Does each interaction need a slightly different form"
    - - "Need to make it so it does not flicker when loading"

list :
    - text : "Check All"
      icon : "fa-check-circle"
      link : { url: "javascript:;", ng: { click: "checkAll()" } }
    - text : "Uncheck All"
      icon : "fa-times-circle"
      link : { url: "javascript:;", ng: { click: "selectedType=[];" } }
    - divider : true
    - text : "{{ type.name }} <span ng-class='isChecked( type.id )'></span>"
      ng   : { repeat: "type in typeList" }
      link : { url: "javascript:;", ng: { click: "setSelectedType()" } }

---

-# Display Total
.alert.alert-info
    %h4 Total : {{ timeLine.length }}

-# Timeline Add Interaction
%div{ ng: { click: "modalAddInteraction()" } }

    -# Icon
    = partial "atom/icon/icon.haml", locals: { icon: "fa-plus-circle fa-4x" }

Clicked : {{ msg }}

-# Title
- title = "Add new interaction"

- days = []
- ( 1...32 ).each do | i |
    - days << [ i ]

-# Body
- body = capture_html do

    -# Togglable tabs tab.js
    = partial "molecule/nav/nav.haml",
               locals: { array:  [ { path: "#log1",         name: "Log Call" },
                                   { path: "#purchase1",    name: "Purchase"},
                                   { path: "#handover1",    name: "Handover"},
                                   { path: "#unsubscribe1", name: "Unsubscribe"} ],
                         toggle: true }

    -# Tab Content
    .tab-content

        -# Code
        .tab-pane.active{ id: "log1" }

            -# Form
            %form.formLog{ action: "", method: "POST", novalidate: true }

                -# Date Picker

                -# Select Day
                = partial "atom/select/select.haml", locals: { array: days, label: { title: "Day" }, name: "day" }

                -# Select Month
                -# Select Year
                -# Select Time

                -# Phone Number
                -# Add a new Number
                -#Â Notes
                -# Rate the call
                -# Buying Stage
                -# Button

        -# Output
        .tab-pane{ id: "purchase1" }
            Download

        -# Output
        .tab-pane{ id: "handover1" }

            -# Form
            %form.formHandover{ action: "", method: "POST", novalidate: true }

                -# Input
                = partial "atom/input/input.haml",
                           locals: { icon:  { prepend: "fa-user" },
                                     input: { inputGroupClass: "input-group",
                                              name:            "text",
                                              placeholder:     "Type name here...." },
                                     label: { title: "Find sales representative" } }

        -# Output
        .tab-pane{ id: "unsubscribe1" }
            Download

-# Modal
= partial "molecule/modal/modal.haml", locals: { id: "myModal", body: body, title: title }

-# Button
= partial "atom/button/button.haml",
           locals: { context: "primary",
                     text:    "Launch Modal",
                     data:    { target: "#myModal",
                                toggle: "modal" } }

%hr

-# Timeline Search
Search:
%input{ ng: { model: "data.search" } }

%hr

-# Timeline Filter
Filter by dropdown:
%select{ ng: { model: "data.filter", init: "data.filter='!!'" } }
    %option{ value: "!!"} All
    %option{ value: "envelope" } Envelope
    %option{ value: "phone" } Phone
    %option{ value: "mobile" } Mobile

%hr

-# Timeline Filter Icons
:css
    .icon.active {
        color: #39ebad;
    }

Filter by icons:

%ul{ class: "list-inline" }
    %li{ ng: { repeat: "type in typeList" } }
        %span{ class: "fa fa-{{type.id}} fa-2x fa-fw", ng: { class: "{ 'icon': !isActive, 'icon active': isActive }", init: "isActive = false", click: "setSelectedType(); isActive = !isActive" } }

%hr

.pull-right

    Filter by Type:

    -##
    -# Timeline Dropdown Filter
    -# @see http://jsfiddle.net/TahmidTanzim/N9Vqk/
    -##
    = partial "molecule/dropdown/dropdown.haml",
               locals: { button:     { ng: { click: "open=!open" } },
                         extraClass: "btn-group",
                         list:       { array:    current_page.data.list,
                                       dropdown: true },
                         ng:         { class: "{ open: open }" },
                         title:      "Filter",
                         type:       "btn-group" }

.clearfix
%hr

-# Legend
.legend
    %b
        Legend

    LDR :
    .ldr

    Response :
    .response

    Stage :
    .stage

%hr
.clearfix

-##
-# Timeline
-# Order by Date
-##
%ul.cbp_tmtimeline

    -# Angular Repeat
    %li{ ng: { repeat: "node in filtered = ( timeLine | timelineFilter:selectedType | filter: { type: data.filter } | filter:data.search | orderBy:'-date' )" } }

        -# Time and Date
        %time.cbp_tmtime{ datetime: "{{ node.date }} {{ node.time }}" }
            %span {{ node.name }}
            %span {{ node.date }}
            %span {{ node.time }}

        -# Icon
        .cbp_tmicon{ class: "{{node.actor}}" }

            -# Icon
            = partial "atom/icon/icon.haml", locals: { icon: "fa-{{ node.type }}" }

        -# Switch for the Details Type
        %div{ ng: { switch: true }, on: "node.template.type" }

            -# Call Back Request
            %div{ ng: { switch: { when: "callbackRequest" } } }

                -# Label
                .cbp_tmlabel

                    %h2 {{ node.template.title }}
                    %p {{ node.template.body }}

            -# Call Back Request
            %div{ ng: { switch: { when: "callback" } } }

                -# Label
                .cbp_tmlabel

                    %h2 {{ node.template.title }}
                    %p {{ node.template.body }}

                    -# Reason
                    {{ node.template.reason }}
                    %br

                    -# Link To
                    = link_to( "{{ node.template.content.title }}", "{{ node.template.content.url }}" )

            -# Click
            %div{ ng: { switch: { when: "click" } } }

                -# Label
                .cbp_tmlabel

                    %h2 {{ node.template.title }}
                    %p {{ node.template.body }}

                    -# Link To
                    %h3 {{ node.template.content.solution }}
                    = link_to( "{{ node.template.content.title }}", "{{ node.template.content.url }}" )

                    -# Details
                    %br
                    Rating {{ node.template.content.rating }}
                    %br
                    Difference {{ node.template.progression.difference }}
                    %br
                    Score {{ node.template.progression.score }}

            -# Default
            %div{ ng: { switch: { default: true } } }

                -# Label
                .cbp_tmlabel

                    %h2 {{ node.template.title }}
                    %p {{ node.template.body }}