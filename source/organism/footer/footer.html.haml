---

description : "Footer, can provide organisation, social and location information"
title       : "Footer, can provide organisation, social and location information"

see :
    - - "Bootstrap sticky footer"
      - "http://getbootstrap.com/examples/sticky-footer/"

todo :
    - - "Allow for set content types - lists - content - icons - address etc so we cause less HTML in the locale"
    - - "Allow for a section to be pulled from a separate partial - i.e. partial per section then can have better separation of locale over html"
    - - "Footer column should be self created or defaults - i.e. allow one section to cross over X columns"
    - - "What aria role should be created"
    - - "Need to include micro-formats - could be viable for address / location elements in the footer"
    - - "Make sure all the SCSS has variables that can be overridden in the core site."

footer :
    -   :title       : "Column 1"
        :icon        : info
        :description : |
            The quick brown fox jumps over the lazy dog

    -   :title       : "Column 2"
        :icon        : cogs
        :description : |
            The quick brown fox jumps over the lazy dog

    -   :title       : "Column 3"
        :icon        : facebook
        :extraClass  : social
        :description : |
            The quick brown fox jumps over the lazy dog

list :
   - text : "Terms & Conditions"
     link : { url: "#term" }
   - text : "Privacy Policy"
     link : { url: "#privacy" }
   - text : "Support"
     link : { url: "#support" }

---

-# Bootstrap row
.row

    -# Bootstrap column
    .col-md-6

        -# Panel body
        - panelBody = capture_html do

            -# Markdown
            :markdown

                The footer section contains two elements

                - Columned area that contains any information within the locale.
                - Copyright section.

                Footer content is driven from the locale file. The yaml object
                not only determines the content but also the amount of columns
                it iterates through.

                The YAML file can contain HTML or Markdown syntax to provide the
                completed look. For markdown simply add markdown : true to the
                section.

                A separate global data file is required to setup the footer across
                multiple languages, the options available are demonstrated below.

        -# Panel
        = codeBlender "panel", "molecule", { body: panelBody, heading: { text: "Introduction" } }

    -# Bootstrap column
    .col-md-6

        -# Panel body - markdown
        - panelBody = capture_html do

            -# Markdown
            :markdown

                Example locale YAML

                    en:
                        footer :

                            # Column One
                            - title       : "About"
                              icon        : "fa-info"
                              description : |
                                Content

                Example data file

                    # Global
                    container  : "container"
                    extraClass : "footer--sticky"

                    # Copyright
                    copyright :
                        active : true

                    # Footer
                    footer :
                        active     : true
                        extraClass : false

                    # Logo
                    drykiss : true

        -# Panel
        = codeBlender "panel", "molecule", { body: panelBody, heading: { text: "Setup" } }

-# Bootstrap row
.row

    .col-md-12

        %br

        -# Default
        :ruby
            code = %{codeBlender "footer", "organism", { fluid: true, sticky: false }}

        -# Code
        = codeBlender "code", "molecule", { code: code, heading: { text: "Default" } }

        -# Using local data with no background
        :ruby
            code = %{codeBlender "footer", "organism", { array: current_page.data.footer, fluid: true, footerClass: "noBackground text-center", sticky: false }}

        -# Code
        = codeBlender "code", "molecule", { code: code, heading: { text: "Local data Footer" } }

        -# Copyright centred text
        :ruby
            code = %{codeBlender "footer", "organism", { center: true, fluid: true, sticky: false }}

        -# Code
        = codeBlender "code", "molecule", { code: code, heading: { text: "Copyright centred text" } }

        -# Copyright extra links
        :ruby
            code = %{codeBlender "footer", "organism", { link: current_page.data.list, center: true, fluid: true, sticky: false }}

        -# Code
        = codeBlender "code", "molecule", { code: code, heading: { text: "Copyright Extra Links" } }

        -# No year + logo
        :ruby
            code = %{codeBlender "footer", "organism", { copyright: "Local String Inserted", fluid: true, noYear: true, logo: true, sticky: false }}

        -# Code
        = codeBlender "code", "molecule", { code: code, heading: { text: "No Year, Logo" } }
