<%#
Dropdown

Dropdowns                - dropdown
Btn Group Dropdown       - btn-group
Input Group Btn Dropdown - input-group-btn

@usage
-# Dropdown
= codeBlender "dropdown", "molecule", { button: { text: "Dropdown" }, list: { array: [ { text: "Action 1", link: { url: "#" } } ] } }

@param list       Array of the menu list data
@param button     Accepts the full button locals with overrides
@param extraClass Extra class for container div | default : dropdown
@param ng         Angular elements

@author   Ian Warner <ian.warner@drykiss.com>
@category molecule
%>

<%# Variable %>
<%
button = locals[:button] || {}
extraClass = locals[:extraClass] || 'dropdown'
id = button[:id] || 'dropdownMenu1'
list = locals[:list]
ng = locals[:ng] || false
%>

<%# Capture content %>
<% captureHTML = capture_html do %>

  <%# Button defaults for dropdown action %>
  <%# Input groups required a button tag %>
  <%
  button[:dropdown] = true
  button[:toggle] = 'dropdown'
  button[:data] = { toggle: 'dropdown' }
  button[:type] = 'button'
  button[:id] = id
  button[:aria] = { haspopup: 'true', expanded: 'true' }
  %>

  <%# Button %>
  <%= partial 'partials/atom/button.erb', locals: button %>

  <%# Dropdown list %>
  <%= partial 'partials/atom/list-dropdown.erb', locals: list %>

<% end %>

<%# Check if opening tag is required %>
<%# Required on normal drop downs or drop ups %>
<% if ! locals[:inputGroup] %>

  <%# Opening tag %>
  <%# This is not required for input groups %>
  <div class="<%= extraClass %>">
    <%= captureHTML %>
  </div>

<% else %>
  <%= captureHTML %>
<% end %>
