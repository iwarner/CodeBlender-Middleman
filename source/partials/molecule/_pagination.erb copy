-##
-# Pagination
-#
-# @usage
-# -# Variables
-# - prevPage = prev_page ? prev_page.url : false
-# - nextPage = next_page ? next_page.url : false
-#
-# -# Pagination
-# = codeBlender "pagination", "molecule", { nextPage: nextPage, prevPage: prevPage, pageNo: page_number, pages: num_pages }
-#
-# @author   Ian Warner <ian.warner@drykiss.com>
-# @category molecule
-##

-# Locals
- size = locals[ :size ] ? "pagination-#{ locals[ :size ] }" : false

-# Nav - Pagination
%nav.text-center{ "aria-label": "Page navigation" }

    -# Pagination
    %ul.pagination{ class: size }

        -# Variables
        - pageNo     = locals[ :pageNo ].to_i
        - totalPages = locals[ :pages ].to_i

        -# Previous Page
        - if prevPage

            -# Sort out icon or text
            - prevText = t( :"pagination.previous" ).kind_of?( Hash ) ? ( codeBlender "icon", "atom", { icon: string( :"pagination.previous.icon" ) } ): string( :"pagination.previous" )

            -# Link
            %li= link_to prevText, prevPage.url, aria: { label: "Previous" }, class: "pagination__link"

            - p = nil
            - ( 1 ... pageNo ).each do p = p ? p.metadata[ :locals ][ 'prev_page' ] : prevPage end

            -# If current page is 3 or more less than the total pages show the end bits
            - if pageNo > 4
                %li= link_to 1, p && p.url, class: "pagination__link"
                %li.disabled
                    %a.pagination__link ...

        -# Loop through the number of pages
        - ( pageNo - 3 .. pageNo + 3 ).select{ | i | i > 0 && i <= totalPages }.each do | i |

            -# Active
            - if i == pageNo.to_i

                -# Active List
                %li.active
                    %span.pagination__link= i

            - else

                %li

                    - p = nil

                    -# Lower Numbers
                    - ( i ... pageNo ).each do p = p ? p.metadata[ :locals ][ 'prev_page' ] : prevPage end

                    -# Greater Numbers
                    - ( pageNo ... i ).each do p = p ? p.metadata[ :locals ][ 'next_page' ] : nextPage end

                    -# Link
                    = link_to i, p && p.url, class: "pagination__link"

        -# Next Page
        - if nextPage

            -# Sort out icon or text
            - nextText = t( :"pagination.next" ).kind_of?( Hash ) ? ( codeBlender "icon", "atom", { icon: string( :"pagination.next.icon" ) } ): string( :"pagination.next" )

            -# Total pages
            - p = nil
            - ( pageNo ... totalPages ).each do p = p ? p.metadata[ :locals ][ 'next_page' ] : nextPage end

            -# If current page is 3 or more less than the total pages show the end bits
            - if pageNo < ( totalPages - 3 )

                -# Link - disabled - showing more pages exist
                %li.disabled
                    %a.pagination__link ...

                -# Link - last
                %li= link_to totalPages, p && p.url, class: "pagination__link"

            -# Link - Next
            %li= link_to nextText, nextPage.url, aria: { label: "Next" }, class: "pagination__link"
