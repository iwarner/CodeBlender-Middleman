-##
-# Nav
-# Nav available in Bootstrap have shared markup, starting with the base .nav
-# class, as well as shared states. Swap modifier classes to switch between each style.
-#
-# @usage
-# = codeBlender "nav", "molecule",
-#   { array: [ { path: "javascript:;", text: "Details" },
-#              { path: "javascript:;", text: "Download"} ] }
-#
-# @author   Ian Warner <ian.warner@drykiss.com>
-# @category molecule
-##

-# Extra Class
- extraClass = locals[ :extraClass ] ? extraClass : ""

-# Pills - default value
- extraClass += ! locals[ :pills ] ? " nav-tabs" : " nav-pills"

-# Stacked - default value
- extraClass += locals[ :stacked ] ? " nav-stacked" : " "

-# Nav
%nav{ role: "navigation" }

    -# Nav list
    %ul.nav{ class: extraClass }

        -# Check array exists
        - if locals[ :array ]

            -# Active - which tab should be active
            - if ! locals[ :active ]
                - active = array[ 0 ][ :text ]

            -# Loop through the Array
            - array.each do | value |

                -# Extra class
                - extraClass = ( active == value[ :text ] ) ? "active #{ value[ :extraClass ] }" : value[ :extraClass ]

                -# Produce the list
                %li.nav__segment{ class: extraClass, role: "presentation" }

                    -# Link to
                    = link_to( value[ :url ], data: { toggle: locals[ :toggle ] ? "tab" : false } ) do

                        -# Prepend icon
                        - if value[ :icon ] and value[ :icon ][ :prepend ]
                            = codeBlender "icon", "atom", value[ :icon ][ :prepend ]

                        -# Content
                        = string value[ :text ]

                        -# Append icon
                        - if value[ :icon ] and value[ :icon ][ :append ]
                            = codeBlender "icon", "atom", value[ :icon ][ :append ]
