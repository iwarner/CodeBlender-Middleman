-##
-# Textarea
-#
-# @usage
-# -# Textarea
-# = codeBlender "textarea", "atom/form/textarea",
-#   { label: { title: "Textarea" },
-#     name:  "textarea", rows: 5 }
-#
-# @author   Ian Warner <ian.warner@drykiss.com>
-# @category atom
-##

-# form group
.form-group{ show: { errors: "{showSuccess: true}" } }

    -# Label - note this is an array as it contains flag for screen reader
    %label.control-label{ for: locals[ :name ], class: label[ :extraClass ] ? label[ :extraClass ] : false }
        = string label[ :title ]

    -# Input
    %textarea{ autocapitalize: locals[ :autocapitalize ] ? autocapitalize        : false,
               autocomplete:   locals[ :autocomplete ]   ? autocomplete          : false,
               autofocus:      locals[ :autofocus ]      ? "autofocus"           : false,
               class:          locals[ :extraClass ]     ? extraClass            : "form-control",
               cols:           locals[ :cols ]           ? cols                  : false,
               disabled:       locals[ :disabled ]       ? true                  : false,
               dirname:        locals[ :dirname ]        ? dirname               : false,
               id:             locals[ :name ]           ? name                  : false,
               maxlength:      locals[ :maxlength ]      ? maxlength             : false,
               minlength:      locals[ :minlength ]      ? minlength             : false,
               name:           locals[ :name ]           ? name                  : false,
               ng:             locals[ :ng ]             ? locals[ :ng ]         : false,
               placeholder:    locals[ :placeholder ]    ? string( placeholder ) : false,
               readonly:       locals[ :readonly ]       ? readonly              : false,
               required:       locals[ :required ]       ? "required"            : false,
               rows:           locals[ :rows ]           ? rows                  : false,
               wrap:           locals[ :wrap ]           ? wrap                  : false }

        -# Text
        - if locals[ :text ]
            = locals[ :text ]

    -# Form feedback icon
    -# Change the class of the icon
    - if locals[ :feedback ]

        -# Feedback
        = codeBlender "icon", "atom", { icon: "form-control-feedback ng-hide" }

    -# Help Block
    -# Sometimes this should be hidden to allow errors to be added inside.
    -# Assume if locals[ :help] is a "true" Bool only then add class hidden and no text
    - if locals[ :help ]

        %span.help-block{ class: !!help == help ? "hidden" : false }

            -# Help should be a string to show the text otherwise leave blank
            - if help.is_a?( String )
                = help
