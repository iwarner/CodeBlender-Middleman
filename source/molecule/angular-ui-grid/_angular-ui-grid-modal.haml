-##
-# Content Modal
-#
-# @author   Ian Warner <ian.warner@drykiss.com>
-# @category molecule
-# @see      https://scotch.io/tutorials/angularjs-form-validation
-##

-# Angular Template
%script{ type: "text/ng-template", id: "content.modal.html" }

    -# Display the Thank you message
    .modalTakeover{ ng: { class: "{ 'show' : modal.showTakeover }" } }

        .content
            = icon "fa-check"

            %div.text Thank you

    -# Modal Header
    .modal-header {{ modal.header }}

    -# Modal Body
    .modal-body

        -# Log In Form
        %form{ novalidate: true, name: "contentForm", ng: { submit: "modal.submitForm( contentForm.$valid )" } }

            -# Input - Title
            = codeBlender "input", "atom", { input: { inputGroupClass: "",
                                          name:            "title",
                                          ng:              { model: "modal.title" },
                                          placeholder:     "Title",
                                          required:        "true" },
                                 label: { title: "Title" } }

            .row

                .col-md-6

                    -# Input - ID
                    = codeBlender "input", "atom", { input: { inputGroupClass: "",
                                                  name:            "_id",
                                                  ng:              { model: "modal._id" },
                                                  placeholder:     "ID",
                                                  required:        "true" },
                                         label: { title: "ID" } }

                    -# Select - Type
                    = codeBlender "select", "atom", { array: data.type, label: { title: "Type" }, name: "type", ng: { model: "modal.type" } }

                    -# Select - Buying Stage
                    = codeBlender "select", "atom", { array: [ [ "learn" ], [ "try" ], [ "buy" ] ], label: { title: "Buying Stage" }, name: "buyingStage", ng: { model: "modal.buyingStage" } }

                    -# Select - Format
                    = codeBlender "select", "atom", { array: [ [ "pdf" ], [ "video" ], [ "link" ] ], label: { title: "Format" }, name: "format", ng: { model: "modal.format" } }

                    -# Select - Solution Area
                    = codeBlender "select", "atom", { array: [ [ "Analytics" ], [ "Commerce" ], [ "Systems" ] ], label: { title: "Solution Area" }, name: "solutionArea", ng: { model: "modal.solutionArea" } }

                .col-md-6

                    -# Input - Date
                    = codeBlender "input", "atom", { input: { inputGroupClass: "",
                                                  name:            "date",
                                                  ng:              { model: "modal.date" },
                                                  required:        "true",
                                                  type:            "date" },
                                         label: { title: "Date" } }

                    -# Input - URL
                    = codeBlender "input", "atom", { input: { inputGroupClass: "",
                                                  name:            "url",
                                                  ng:              { model: "modal.url" },
                                                  placeholder:     "URL",
                                                  type:            "url" },
                                         label: { title: "URL" } }

                    -# Input - DocType
                    = codeBlender "input", "atom", { input: { inputGroupClass: "",
                                                  name:            "docType",
                                                  ng:              { model: "modal.docType" },
                                                  placeholder:     "DocType",
                                                  required:        "true" },
                                         label: { title: "DocType" } }

                    -# Input - Interest Codes
                    = codeBlender "input", "atom", { input: { inputGroupClass: "",
                                                  name:            "interestCode",
                                                  ng:              { model: "modal.interestCodes" },
                                                  placeholder:     "Comma separated list of codes",
                                                  required:        "true" },
                                         label: { title: "Interest Codes" } }


                    -# Input - Countries
                    = codeBlender "input", "atom", { input: { inputGroupClass: "",
                                                  name:            "countries",
                                                  ng:              { model: "modal.countries" },
                                                  placeholder:     "Comma separated list of Countries",
                                                  required:        "true" },
                                         label: { title: "Countries" } }

            -# Input - Tags
            = codeBlender "input", "atom", { input: { inputGroupClass: "",
                                          name:            "tag",
                                          ng:              { model: "modal.tags" },
                                          placeholder:     "Comma separated list of tags",
                                          required:        "true" },
                                 label: { title: "Tags" } }

            -# TextArea - Synopsis
            = codeBlender "textarea", "atom", { required: "true", text: "{{ modal.synopsis }}", rows: "4", label: { title: "Synopsis" }, name: "synopsis", ng: { model: "modal.synopsis" } }

            -# Cancel Button
            = codeBlender "button", "atom", { context: "warning", text: "Cancel", ng: { click: "$close()" } }

            -# Save Button
            = codeBlender "button", "atom", { type: "submit", context: "success", text: "{{ modal.button }}" }
