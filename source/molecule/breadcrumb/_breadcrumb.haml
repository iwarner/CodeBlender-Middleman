-##
-# Breadcrumb
-# Bootstrap component to highlight a navigation path
-#
-# @usage
-# -# Breadcrumb
-# = codeBlender "breadcrumb", "molecule", { array: current_page.data.breadcrumbs, title: current_page.data.heading.title }
-#
-# @author   Ian Warner <ian.warner@drykiss.com>
-# @category molecule
-##

-# Locals
- extraClass = locals[ :extraClass ] ?  locals[ :extraClass ] + " breadcrumb" : "breadcrumb"

-# Check if array exists otherwise use URL
- unless locals[ :array ]

    -# Get the url elements
    - split = current_page.url.split "/"

    -# Count items
    - count = split.count

    -# Create breadcrumb array
    - array = []

    -# Last breadcrumb variable
    - lastBreadcrumb = ""

    -# Check if split exists
    - if not split.empty?

        -# Loop through these to create the breadcrumb array
        - split.each_with_index do | breadcrumb, index |

            -# Collect the last url partial
            - lastBreadcrumb += "/" + breadcrumb

            -# If breadcrumb is empty i.e. for Home
            - text = breadcrumb.empty? ? "Home" : breadcrumb.capitalize

            -# Sort out the first element - Home
            - if index == 0

                -# Add the breadcrumbs Hash
                - array << { icon: "fa-home", link: { url: "/index.html" } }

                -# Sort out the last element
            - elsif count -1 == index

                -# If the last one is *.html remove this
                -# this.to_s.scan(/#{ options.keyword }/i)
                - if text.scan( /\.html/ )
                    - array << { active: true, text: locals[ :title ] }
                - else
                    - array[ -1 ][ :url ]    = false
                    - array[ -1 ][ :active ] = true

                -# Sort out the middle elements
                -# For a blog post there may be indiscriminate folders added
            - else

                -# See if a resource exists for text.html or text/index.html or text/text.html
                -# Check to see if its the same as the current page - if so make non active
                - if sitemap.find_resource_by_path( lastBreadcrumb.sub( "//", "/" ) + ".html" )

                    - if lastBreadcrumb.sub( "//", "/" ) + ".html" != current_page.url

                        -# Add the breadcrumb Hash
                        - array << { text: text, link: { url: lastBreadcrumb.sub( "//", "/" ) + ".html" } }

                - if sitemap.find_resource_by_path( lastBreadcrumb.sub( "//", "/" ) + "/index.html" )

                    - if lastBreadcrumb.sub( "//", "/" ) + "/index.html" != current_page.url

                        -# Add the breadcrumb Hash
                        - array << { text: text, link: { url: lastBreadcrumb.sub( "//", "/" ) + "/index.html" } }

                - elsif res = sitemap.find_resource_by_path( lastBreadcrumb.sub( "//", "/" ) + "/#{ text.downcase }.html" )

                    - if lastBreadcrumb.sub( "//", "/" ) + "/#{ text.downcase }.html" != current_page.url

                        -# Add the breadcrumb Hash
                        - array << { text: text, link: { url: lastBreadcrumb.sub( "//", "/" ) + "/#{ text.downcase }.html" } }

    - else

        -# Home page breadcrumb
        - array << { active: true, text: "Home" }

-# List
= codeBlender "list-ul", "atom", { array: array, extraClass: extraClass, type: "ol" }
