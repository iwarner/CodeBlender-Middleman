---

meta :
    author      : "DryKISS"
    description : "Login - CodeBlender"
    image       : "Image"
    subject     : "DryKISS"
    title       : "Login - CodeBlender"
    type        : "website"

heading :
    small : "Standard Login Form"
    title : "Login"

see :
    - - "Bootstrap Signin"
      - "http://getbootstrap.com/examples/signin/"
    - - "Metronic"
      - "http://www.keenthemes.com/preview/index.php?theme=metronic"
    - - "Bootstrap Forms"
      - "http://getbootstrap.com/css/#forms"
    - - "Secure API"
      - "http://www.thebuzzmedia.com/designing-a-secure-rest-api-without-oauth-authentication/"

todo :
    - - "Add the ability to log in via other openIDs such as google or github."
    - - "Use the bootstrap button JS to stop the button being submitted again"
    - - "Sort out TabIndex"
    - - "Sort out Accessibility"
    - - "Sort out Schema.org"

---

-# Bootstrap Row
.row

    -# Bootstrap Columns
    .col-md-6

        -# Login
        = partial "molecule/login/login.haml"

    .col-md-6

        :markdown

            * Login should take an email and password combination
            * Validate effectively, with suitable password pattern
            * Make a request to the Provider for server side validation and persistent token exchange

            Authentication should include the following

            * CSRF headers in authentication requests to prevent forgery
                * http://en.wikipedia.org/wiki/Cross-site_request_forgery
            * Auth state persistence through signed cookies
            * Global (singleton) session model in the client whose state changes can be listened to
            * Client-side + Server-side model validations
            * Salt/hashing of passwords for back-end storage
            * Communication on this form should happen with https.

%hr