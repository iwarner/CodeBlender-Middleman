---

meta :
    author      : "DryKISS"
    description : "Carousel - CodeBlender"
    image       : "Image"
    subject     : "DryKISS"
    title       : "Carousel - CodeBlender"
    type        : "website"

heading :
    title : "Carousel"

see :
    - - "Bootstrap carousel"
      - "http://getbootstrap.com/javascript/#carousel"
    - - "Swipe Support"
      - "http://lazcreative.com/blog/adding-swipe-support-to-bootstrap-carousel-3-0/"

todo :
    - - "Need to find a way to work with both ImageArray and a more content focussed array"
    - - "Should pass direct arrays for image and heading to the carousel"
    - - "Heading for caption should use partial"
    - - "Caption should be more flexible, maybe pull from partials also"

locals :
    - - "array"
      - "array"
      - "required"
      - "Array containing the image and caption arrays"
    - - "control"
      - "bool"
      - "optional"
      - "Whether to show the controls - default: true"
    - - "id"
      - "string"
      - "required"
      - "ID of the carousel element - Default : myCarousel"
    - - "indicator"
      - "bool"
      - "optional"
      - "Whether to show the dot indicators - default: true"

---

:markdown

    **Accessibility**

    The carousel component is generally not compliant with accessibility
    standards. If you need to be compliant, please consider other options for
    presenting your content.

    **Image sizes**

    A bootstrap grid can go as wide as 1170px.

    **Swipe**

    On many occasions you will want to add Swipe support to the bootstrap
    carousel.

    This can be easily achieved by adding the [JQuery Mobile](http://jquerymobile.com/download-builder/)
    touch events as below to your backbone view.

        events :
            "swiperight #carouselID" : "swipeRight"
            "swipeleft  #carouselID" : "swipeLeft"

    Create the methods to handle the swipe events

        swipeRight : ( event ) ->
            $( event.currentTarget ).carousel "prev"

        swipeLeft : ( event ) ->
            $( event.currentTarget ).carousel "next"

-# Carousel
:ruby
    code = %{codeBlender "carousel", "molecule",
                { array: [ { image: { extraClass: "img-responsive", src: lorem.image( '820x400', :random_color => true, text: 'Carousel 1' ) } },
                           { image: { extraClass: "img-responsive", src: lorem.image( '820x400', :random_color => true, text: 'Carousel 2' ) } } ],
                  data:  { ride: "carousel", interval: "3000" }, control: true, indicator: true }}

-# Code
= codeBlender "code", "organism", { code: code, heading: { text: "Default" } }

-# Caption
:ruby
    code = %{codeBlender "carousel", "molecule",
                { array: [ { image: { carouselCaption: { body: "Caption body", title: "Caption title" },
                                      extraClass: "img-responsive", src: lorem.image( '820x400', :random_color => true, text: 'Carousel 1' ) } } ], indicator: true }}

-# Code
= codeBlender "code", "organism", { code: code, heading: { text: "Caption" } }

-# No Indicators
:ruby
    code = %{codeBlender "carousel", "molecule",
                { array: [ { image: { extraClass: "img-responsive", src: lorem.image( '820x400', :random_color => true, text: 'Carousel 1' ) } },
                           { image: { extraClass: "img-responsive", src: lorem.image( '820x400', :random_color => true, text: 'Carousel 2' ) } } ],
                  id: "iPhoneCarousel" }}

-# Code
= codeBlender "code", "organism", { code: code, heading: { text: "No indicators or controls" } }
