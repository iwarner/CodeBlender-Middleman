-##
-# Navigation bar
-# Create a navigation array in the corresponding locale file, this will identify
-#
-# @usage
-# -# Navigation bar
-# = codeBlender "navbar", "molecule", data.navigation
-#
-# @locals
-# brand      :
-#     active : false
-#     text   : true
-#     link   : "overview"
-# icon       : false
-# extraClass : "navbar-default navbar-fixed-top" # navbar-static-top navbar-inverse navbar-fixed-bottom
-# ng         :
-#     controller : "NavbarController"
-#     show       : "NavbarService"
-#     cloak      : ""
-# logo       :
-#     alt    : false
-#     width  : false
-#     height : false
-# type       : false
-# uLClass    : "navbar-left"
-# wrapper    : false
-#
-# @author   Ian Warner <ian.warner@drykiss.com>
-# @category molecule
-##

-# Variable
- links      = ( defined? t )        ? t( :navigation )      : data.navigation.navigation
- id         = locals[ :id ]         ? locals[ :id ]         : "navbar"
- extraClass = locals[ :extraClass ] ? locals[ :extraClass ] : false
- angular    = locals[ :ng ]         ? locals[ :ng ]         : false
- container  = locals[ :container ]  ? locals[ :container ]  : data.config.container
- target     = locals[ :target ]     ? "##{ target }"        : "#navbar-collapse"

-# Navigation bar
%nav.navbar{ id: id, class: extraClass, role: "navigation", ng: angular }

    -# Bootstrap container - drawn from configuration container
    %div{ class: container }

        -# Header
        .navbar-header

            -# Create the collapsible menu - requires JS plug-in
            %button.navbar-toggle.collapsed{ type: "button", data: { toggle: "collapse", target: target }, aria: { expanded: "false" } }

                -# Screen reader text
                %span.sr-only Toggle Navigation

                -# Loop through spans for menu icon
                - 3.times do
                    %span.icon-bar

            -# Variable
            - brand = data.navigation.brand

            -# Display the logo or brand name and optional icon
            - if brand.active && ( brand.icon.active || brand.logo.active || brand.text.active )

                -# Link
                = link_to( brand.link.url,
                           class: "navbar-brand #{ brand.extraClass }",
                           title: brand.text.active ? string( brand.text.title ): false,
                           ui:    brand.link.ui ? brand.link.ui : false ) do

                    -# Icon
                    - if brand.icon.active
                        = codeBlender "icon", "atom", { icon: brand.icon.icon }

                    -# Image
                    - if brand.logo.active
                        = codeBlender "image", "atom", { alt: brand.logo.alt, size: [ brand.logo.width, brand.logo.height ], src: brand.logo.url ? brand.logo.url : "logo/logo.png" }

                    -# Brand
                    - if brand.text.active
                        %span{ itemprop: "headline" }= string brand.text.text

        -# Create the collapse area - target without the #
        .navbar-collapse.collapse{ id: target[ 1..-1 ] }

            -# Loop through the left, centre and right sections
            - links.each do | entry |

                -# List initiation
                %ul.nav.navbar-nav{ class: "navbar-#{ entry[ 0 ] }" }

                    -# Loop through entries
                    - entry[ 1 ].each do | side |

                        -# Sort out active navigation
                        - if side[ :link ]

                            -# URL
                            - url = side[ :link ][ :url ]
                            - side[ :active ] = ( current_page.url == url ) ? true : false

                        -# Dropdown menu
                        - if side[ :dropdown ]

                            -# Variable
                            - button = side[ :button ] ? side[ :button ] : false
                            - ng     = side[ :ng ]     ? side[ :ng ]     : false

                            -# Navigation dropdown
                            = codeBlender "dropdown-navbar", "molecule",
                                { button:     button,
                                  extraClass: side[ :extraClass ],
                                  ng:         ng,
                                  list:       { array: side[ :items ] } }

                            -# Shop widget
                        - elsif side[ :shop ]
                            %li= codeBlender "e-commerce/widget.haml"

                            -# Button
                        - elsif side[ :button ]

                            %div{ class: side[ :extraClass ] ? side[ :extraClass ] : false }
                                = codeBlender "button", "atom", side[ :button ]

                            -# Just show a Partial useful for Mega Menus
                        - elsif side[ :partial ]
                            = partial "#{ side[ :partial ] }.haml"

                            -# Text Link
                        - else

                            -# List
                            -# Expects the active element to be pushed into the array
                            = codeBlender "list-ul", "atom", { array: [ side ], navBar: true, extraClass: side[ :extraClass ] }

            -# Check if search is required
            - if data.has_key? "google" and data.google.search

                -# Navigation bar form
                %form.navbar-form.navbar-right{ action: "/search.html", role: "search" }

                    -# Input
                    = codeBlender "input", "atom", { icon:  { prepend: "fa-search" },
                                                     input: { inputGroupClass: "input-group", name: "q", placeholder: "Search" },
                                                     label: { title: "Search", extraClass: "sr-only" } }

                    -# Button
                    = codeBlender "button", "atom", { text: "Search" }
