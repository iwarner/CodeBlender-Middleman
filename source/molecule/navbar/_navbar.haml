-##
-# Navigation bar
-# Create a navigation array in the corresponding locale file, this will identify
-#
-# @usage
-# -# Navigation bar
-# = partial "molecule/navbar/navbar.haml", locals: data.navigation
-#
-# @locals
-# brand      :
-#     active : false
-#     text   : true
-#     link   : "overview"
-# icon       : false
-# extraClass : "navbar-default navbar-fixed-top" # navbar-static-top navbar-inverse navbar-fixed-bottom
-# ng         :
-#     controller : "NavbarController"
-#     show       : "NavbarService"
-#     cloak      : ""
-# logo       :
-#     alt    : false
-#     width  : false
-#     height : false
-# type       : false
-# uLClass    : "navbar-left"
-# wrapper    : false
-#
-# @category molecule
-# @author   Ian Warner <ian.warner@drykiss.com>
-##

-# Variable
- links      = t :navigation
- id         = locals[ :id ]         ? locals[ :id ]         : "navbar"
- extraClass = locals[ :extraClass ] ? locals[ :extraClass ] : false
- angular    = locals[ :ng ]         ? locals[ :ng ]         : false
- container  = locals[ :container ]  ? locals[ :container ]  : data.config.container
- target     = locals[ :target ]     ? "##{ target }"        : "#navbar-collapse"

-# Navigation bar
%nav.navbar{ id: id, class: extraClass, role: "navigation", ng: angular }

    -# Bootstrap container - drawn from configuration container
    %div{ class: container }

        -# Header
        .navbar-header

            -# Create the collapsible menu - requires JS plug-in
            %button.navbar-toggle.collapsed{ type: "button", data: { toggle: "collapse", target: target }, aria: { expanded: "false" } }

                -# Screen reader text
                %span.sr-only Toggle Navigation

                -# Loop through spans for menu icon
                - 3.times do
                    %span.icon-bar

            -# Brand
            = partial "molecule/brand/navbar.haml"

        -# Create the collapse area - target without the #
        .navbar-collapse.collapse{ id: target[ 1..-1 ] }

            -# Loop through the left, centre and right sections
            - links.each do | entry |

                -# List initiation
                %ul.nav.navbar-nav{ class: "navbar-#{ entry[ 0 ] }" }

                    -# Loop through entries
                    - entry[ 1 ].each do | side |

                        - if side[ :link ]
                            - side[ :active ] = ( current_page.url == side[ :link ][ :url ] ) ? true : false

                        -# Dropdown menu
                        - if side[ :dropdown ]

                            -# Dropdown Partial
                            = partial "molecule/dropdown/navbar.haml",
                                       locals: { dropDownClass: side[ :dropdownClass ],
                                                 title:         side[ :dropdown ],
                                                 icon:          side[ :icon ] ? side[ :icon ] : false,
                                                 ng:            side[ :ng ]   ? side[ :ng ]   : false,
                                                 list:          { array: side[ :items ], dropdown: true } }

                            -# Shop Widget
                        - elsif side[ :shop ]

                            -# Simple Cart Widget
                            %li= partial "e-commerce/widget.haml"

                            -# Button
                        - elsif side[ :button ]

                            %div{ class: side[ :extraClass ] ? side[ :extraClass ] : false }

                                -# Button
                                = partial "atom/button/button.haml", locals: side[ :button ]

                            -# Just show a Partial useful for Mega Menus
                        - elsif side[ :partial ]

                            = partial "../_lib/#{ side[ :partial ] }.haml"

                            -# Text Link
                        - else

                            -# List
                            -# Expects the active element to be pushed into the array
                            = partial "atom/list/list.ul.haml", locals: { array: [ side ], navBar: true, extraClass: side[ :extraClass ] }

            -# Check if search is required
            - if data.has_key? "google" and data.google.search

                -# Search Google
                = partial "molecule/search/searchNavbar.haml"
