---

description : "Carousel"
title       : "Carousel"

# See
see :
    - - "Bootstrap carousel"
      - "http://getbootstrap.com/javascript/#carousel"
    - - "Swipe Support"
      - "http://lazcreative.com/blog/adding-swipe-support-to-bootstrap-carousel-3-0/"

# Todo
todo :
    - - "Need to find a way to work with both ImageArray and a more content focussed array"
    - - "Should pass direct arrays for image and heading to the carousel"
    - - "Heading for caption should use partial"
    - - "Caption should be more flexible, maybe pull from partials also"

---

:markdown

    **Accessibility**

    The carousel component is generally not compliant with accessibility
    standards. If you need to be compliant, please consider other options for
    presenting your content.

    **Image sizes**

    A bootstrap grid can go as wide as 1170px.

    **Swipe**

    On many occasions you will want to add Swipe support to the bootstrap
    carousel.

    This can be easily achieved by adding the [JQuery Mobile](http://jquerymobile.com/download-builder/)
    touch events as below to your backbone view.

        events :
            "swiperight #carouselID" : "swipeRight"
            "swipeleft  #carouselID" : "swipeLeft"

    Create the methods to handle the swipe events

        swipeRight : ( event ) ->
            $( event.currentTarget ).carousel "prev"

        swipeLeft : ( event ) ->
            $( event.currentTarget ).carousel "next"

-# Carousel
:ruby
    code = %{codeBlender "carousel", "molecule",
      { array: [ { image: { data: { text: "yes" }, itemClass: "test", extraClass: "img-responsive", src: lorem.image( '820x400', :random_color => true, text: 'Carousel 1' ) } },
                 { image: { extraClass: "img-responsive", src: lorem.image( '820x400', :random_color => true, text: 'Carousel 2' ) } } ],
        data:  { ride: "carousel", interval: "3000" }, control: true, indicator: true, id: "carousel1" }}

-# Code
= codeBlender "code", "molecule", { code: code, heading: { text: "Default" } }

-# Caption
:ruby
    code = %{codeBlender "carousel", "molecule",
      { array: [ { image: { carouselCaption: { body: "Caption body", text: "Caption title" }, extraClass: "img-responsive", src: lorem.image( '820x400', :random_color => true, text: 'Carousel 1' ) } } ],
        data:  { ride: "carousel", interval: "3000" }, indicator: true, id: "carousel2" }}

-# Code
= codeBlender "code", "molecule", { code: code, heading: { text: "Caption, no controls" } }

-# No Indicators
:ruby
    code = %{codeBlender "carousel", "molecule",
      { array: [ { image: { extraClass: "img-responsive", src: lorem.image( '820x400', :random_color => true, text: 'Carousel 1' ) } },
                 { image: { extraClass: "img-responsive", src: lorem.image( '820x400', :random_color => true, text: 'Carousel 2' ) } } ],
        data:  { ride: "carousel", interval: "3000" }, id: "carousel3" }}

-# Code
= codeBlender "code", "molecule", { code: code, heading: { text: "No indicators or controls" } }

-# Just a caption
:ruby
    code = %{codeBlender "carousel", "molecule",
      { array: [ { image: { carouselCaption: { tag: "h1", body: "Caption body 1", text: "Caption title 1" } } },
                 { image: { carouselCaption: { body: "Caption body 2", text: "Caption title 2" } } } ],
        data:  { ride: "carousel", interval: "5000" }, id: "carousel__captionOnly" }}

-# Code
= codeBlender "code", "molecule", { code: code, heading: { text: "Just a caption" } }
