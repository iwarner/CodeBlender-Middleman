-##
-# List Mobile Partial
-# A list is coded as a simple unordered list (ul)
-#
-# @author Ian Warner <ian.warner@drykiss.com>
-# @see
-#
-# Some features include:
-# Dividers
-# Count Bubbles
-# Icon - Main and Active icons if required
-# Thumbnails
-# Collapsible
-# Full Width or not
-# Top and Bottom border - indented border between list items
-# Content will be cut down
-# List should be scrollable on phone
-#
-# Locals
-# array      - Array  - (Required) - Elements for the list to display.
-# extraClass - String - (Optional) - Extra Classes
-# icon       - String - (Optional) - Icon
-# activeIcon - bool   - (Optional) - Whether to show the link icon on the right side
-# title      - String - (Optional) - Title
-# href       - String - (Optional) - Href
-# active     - bool   - (Optional) - true
-#
-# Usage
-# = partial "mobile/list",
-#            :locals => { :array => [ { :activeIcon => true,
-#                                       :title      => "All Categories",
-#                                       :href       => "/test",
-#                                       :active     => :true } ] }
-#
-# Todo
-# @todo Sometime we dont want to link a list view
-##


-# Array is blank
- if array.blank?
    - puts "There is no Mobile List Array"

-# Type Default to default if not defined
- if defined? extraClass and ! extraClass.empty?
    - extraClass = extraClass

-# List
%ul{ :role => :list, :class => extraClass }

    -# Loop through the array
    - array.each do | entry |

        -# Check to see if this is a divider
        - if entry["divider"]

            %li.divider
                .overflow
                    = entry["divider"]

            -# Check to see if this is a divider
        - elsif entry["seperator"]

            -# Seperator
            .hs

            -# Proceed with list entry
        - else

            -# Start the List Row
            %li

                %a.overflow{ :href => entry["href"], :title => entry["title"] }

                    -# Icon
                    - if defined? entry["icon"] and ! entry["icon"].blank?
                        %i{ :class => "icon-#{entry["icon"]}" }

                    -# Title
                    %span
                        = entry["title"]

                    -# Active Icon
                    - if entry["activeIcon"]
                        .pull-right
                            %i.icon-chevron-right-large