-##
-# NavBar
-#
-# @author Ian Warner <ian.warner@drykiss.com>
-##

-# Variables
- dc = data.config

-# Extra Classes
- extraClass  = locals[ :navExtraClass ] ? navExtraClass : ""
- extraClass += ( dc.navigation.type == "inverse" or locals[ :type ] == "inverse" ) ? " navbar-inverse" : " navbar-default"
- extraClass += ( locals[ :yamm ] ) ? " yamm" : ""

-# Position of the Navbar Fixed Top or Bottom
- if dc.navigation.position or locals[ :position ]
    - position    = locals[ :position ] ? position : dc.navigation.position ? dc.navigation.position : false
    - extraClass += " navbar-#{ position }"

-# Navbar
%nav.navbar{ id:    locals[ :id ] ? id : "navbar",
             class: extraClass,
             role:  "navigation" }

    -# Bootstrap Container - drawn from config container
    %div{ class: dc.container }

        -# Navbar Header
        .navbar-header

            -# Create the Nav Collapse Menu
            %button.navbar-toggle.collapsed{ type: :button,
                                             data: { toggle: :collapse,
                                                     target: locals[ :target] ? "##{ target }" : "#navbar-collapse" } }
                %span.sr-only Toggle Navigation

                -# Loop through Spans
                - 3.times do
                    %span.icon-bar

            -# Display the Logo or Brand Name and optional Icon
            - brand = dc.navigation.brand

            - if brand.active

                -# Link To
                = link_to( brand.link,
                           class: "navbar-brand",
                           title: string( brand.text ) ) do

                    -# Icon
                    - if brand.icon.active
                        = icon brand.icon.icon

                    -# Show Image
                    - if brand.logo.active

                        -# Image
                        = partial "./bootstrap/css/image",
                                   locals: { alt:  string( brand.logo.alt ),
                                             size: [ brand.logo.width, brand.height ],
                                             src:  "logo/logo.png" }

                    -# Show Brand
                    - if brand.text
                        = string brand.text

        -# Check that navigation is not empty
        - if t( :navigation ) or locals[ :array ]

            -# Local array takes precedent
            - array = locals[ :array ] ? array : t( :navigation )

            -# Create the collapse area
            .navbar-collapse.collapse{ id: locals[ :target ] ? target : "navbar-collapse" }

                -# Wrapper for off-canvas responsive menues
                -# This needs to be optional
                %div{ class: dc.navigation.wrapper ? dc.navigation.wrapper : false }

                    -# Loop through the Navigation Yaml
                    - array.each do | entry |

                        -# Get correct URL path
                        - if ! relative_links
                            - url = current_page.url.length > 1 ? current_page.url[ 0...-1 ] : current_page.url
                        - else
                            - url = File.dirname( URI.parse( current_page.url ).path )

                        -# Sort out what item is active
                        - entry[ :active ] = ( url == entry[ :url ] ) ? true : false

                        -# Process Array
                        - array = []
                        - array << entry

                        -# Dropdown menu
                        - if entry[ :dropdown ]

                            -# Dropdown Partial
                            = partial "./bootstrap/components/dropdown",
                                       locals: { extraClass:    entry[ :extraClass ] ? entry[ :extraClass ] : false,
                                                 dropDownClass: entry[ :dropdownClass ],
                                                 title:         entry[ :dropdown ],
                                                 list:          { array:    array[ 0 ][ :items ],
                                                                  dropdown: true } }

                            -# Shop Widget
                        - elsif entry[ :shop ]

                            %ul.nav.navbar-nav{ class: entry[ :extraClass ] ? entry[ :extraClass ] : false }

                                %li
                                    -# Simple Cart Widget
                                    = partial "./e-commerce/widget"

                            -# Button
                        - elsif entry[ :button ]

                            %div{ class: entry[ :extraClass ] ? entry[ :extraClass ] : false }

                                -# Button
                                = partial "./bootstrap/css/button", locals: entry[ :button ]

                            -# Text Link
                        - else

                            -# List
                            = partial "./bootstrap/type/list",
                                       locals: { array:      array,
                                                 navBar:     true,
                                                 extraClass: entry[ :extraClass ] }

                -# Google Search Bar
                - if dc.google.search
                    = partial "./google/search"